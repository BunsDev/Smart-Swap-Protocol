{"version":3,"sources":["pages/Pool/ModeSelector.js","pages/Pool/index.js","components/OversizedPanel/index.js","webpack:///./src/assets/images/dropdown-blue.svg?8fdf"],"names":["poolTabOrder","path","textKey","regex","LiquidityContainer","styled","div","theme","flexRowNoWrap","royalBlue","lighten","LiquidityLabel","span","StyledNavLink","NavLink","attrs","activeClassName","doveGray","inputBackground","mercuryGray","PoolModal","ColoredDropdown","isError","highSlippageWarning","rest","withRouter","pathname","location","history","t","useTranslation","useState","modalIsOpen","setModalIsOpen","activeTabKey","findIndex","match","navigate","useCallback","direction","tabIndex","push","length","navigateRight","navigateLeft","useBodyKeyDown","OversizedPanel","hideTop","onClick","alt","Modal","isOpen","maxHeight","onDismiss","map","key","to","isActive","_","AddLiquidity","lazy","RemoveLiquidity","CreateExchange","Pool","params","useEffect","ReactGA","pageview","window","search","fallback","exact","strict","component","render","state","tokenAddress","Panel","concreteGray","PanelTop","PanelBottom","hideBottom","children","_extends","Object","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","stroke","SvgDropdownBlue","_ref","svgRef","title","props","width","height","viewBox","fill","ref","ForwardRef","forwardRef"],"mappings":"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","file":"static/js/11.60c8ffb4.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react'\r\nimport { withRouter, NavLink } from 'react-router-dom'\r\nimport { useTranslation } from 'react-i18next'\r\nimport styled from 'styled-components'\r\n\r\nimport OversizedPanel from '../../components/OversizedPanel'\r\nimport { ReactComponent as Dropdown } from '../../assets/images/dropdown-blue.svg'\r\n\r\nimport Modal from '../../components/Modal'\r\nimport { useBodyKeyDown } from '../../hooks'\r\n\r\nimport { lighten } from 'polished'\r\n\r\nconst poolTabOrder = [\r\n  {\r\n    path: '/add-liquidity',\r\n    textKey: 'addLiquidity',\r\n    regex: /\\/add-liquidity/\r\n  },\r\n  {\r\n    path: '/remove-liquidity',\r\n    textKey: 'removeLiquidity',\r\n    regex: /\\/remove-liquidity/\r\n  },\r\n  {\r\n    path: '/create-exchange',\r\n    textKey: 'createExchange',\r\n    regex: /\\/create-exchange.*/\r\n  }\r\n]\r\n\r\nconst LiquidityContainer = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap};\r\n  align-items: center;\r\n  padding: 1rem 1rem;\r\n  font-size: 1rem;\r\n  color: ${({ theme }) => theme.royalBlue};\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    color: ${({ theme }) => lighten(0.1, theme.royalBlue)};\r\n  }\r\n\r\n  img {\r\n    height: 0.75rem;\r\n    width: 0.75rem;\r\n  }\r\n`\r\n\r\nconst LiquidityLabel = styled.span`\r\n  flex: 1 0 auto;\r\n`\r\n\r\nconst activeClassName = 'MODE'\r\n\r\nconst StyledNavLink = styled(NavLink).attrs({\r\n  activeClassName\r\n})`\r\n  ${({ theme }) => theme.flexRowNoWrap}\r\n  padding: 1rem;\r\n  margin-left: 1rem;\r\n  margin-right: 1rem;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  color: ${({ theme }) => theme.doveGray};\r\n  font-size: 1rem;\r\n\r\n  &.${activeClassName} {\r\n    background-color: ${({ theme }) => theme.inputBackground};\r\n    border-radius: 3rem;\r\n    border: 1px solid ${({ theme }) => theme.mercuryGray};\r\n    font-weight: 500;\r\n    color: ${({ theme }) => theme.royalBlue};\r\n  }\r\n`\r\n\r\nconst PoolModal = styled.div`\r\n  background-color: ${({ theme }) => theme.inputBackground};\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 2rem 0 2rem 0;\r\n`\r\n\r\nconst WrappedDropdown = ({ isError, highSlippageWarning, ...rest }) => <Dropdown {...rest} />\r\nconst ColoredDropdown = styled(WrappedDropdown)`\r\n  path {\r\n    stroke: ${({ theme }) => theme.royalBlue};\r\n  }\r\n`\r\n\r\nfunction ModeSelector({ location: { pathname }, history }) {\r\n  const { t } = useTranslation()\r\n\r\n  const [modalIsOpen, setModalIsOpen] = useState(false)\r\n\r\n  const activeTabKey = poolTabOrder[poolTabOrder.findIndex(({ regex }) => pathname.match(regex))].textKey\r\n\r\n  const navigate = useCallback(\r\n    direction => {\r\n      const tabIndex = poolTabOrder.findIndex(({ regex }) => pathname.match(regex))\r\n      history.push(poolTabOrder[(tabIndex + poolTabOrder.length + direction) % poolTabOrder.length].path)\r\n    },\r\n    [pathname, history]\r\n  )\r\n  const navigateRight = useCallback(() => {\r\n    navigate(1)\r\n  }, [navigate])\r\n  const navigateLeft = useCallback(() => {\r\n    navigate(-1)\r\n  }, [navigate])\r\n\r\n  useBodyKeyDown('ArrowDown', navigateRight, modalIsOpen)\r\n  useBodyKeyDown('ArrowUp', navigateLeft, modalIsOpen)\r\n\r\n  return (\r\n    <OversizedPanel hideTop>\r\n      <LiquidityContainer\r\n        onClick={() => {\r\n          setModalIsOpen(true)\r\n        }}\r\n      >\r\n        <LiquidityLabel>{t(activeTabKey)}</LiquidityLabel>\r\n        <ColoredDropdown alt=\"arrow down\" />\r\n      </LiquidityContainer>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        maxHeight={50}\r\n        onDismiss={() => {\r\n          setModalIsOpen(false)\r\n        }}\r\n      >\r\n        <PoolModal>\r\n          {poolTabOrder.map(({ path, textKey, regex }) => (\r\n            <StyledNavLink\r\n              key={path}\r\n              to={path}\r\n              isActive={(_, { pathname }) => pathname.match(regex)}\r\n              onClick={() => {\r\n                setModalIsOpen(false)\r\n              }}\r\n            >\r\n              {t(textKey)}\r\n            </StyledNavLink>\r\n          ))}\r\n        </PoolModal>\r\n      </Modal>\r\n    </OversizedPanel>\r\n  )\r\n}\r\n\r\nexport default withRouter(ModeSelector)\r\n","import React, { Suspense, lazy, useEffect } from 'react'\r\nimport ReactGA from 'react-ga'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport ModeSelector from './ModeSelector'\r\n\r\nconst AddLiquidity = lazy(() => import('./AddLiquidity'))\r\nconst RemoveLiquidity = lazy(() => import('./RemoveLiquidity'))\r\nconst CreateExchange = lazy(() => import('./CreateExchange'))\r\n\r\nexport default function Pool({ params }) {\r\n  useEffect(() => {\r\n    ReactGA.pageview(window.location.pathname + window.location.search)\r\n  }, [])\r\n\r\n  const AddLiquidityParams = () => <AddLiquidity params={params} />\r\n\r\n  const RemoveLiquidityParams = () => <RemoveLiquidity params={params} />\r\n\r\n  const CreateExchangeParams = () => <CreateExchange params={params} />\r\n\r\n  return (\r\n    <>\r\n      <ModeSelector />\r\n      {/* this Suspense is for route code-splitting */}\r\n      <Suspense fallback={null}>\r\n        <Switch>\r\n          <Route exact strict path=\"/add-liquidity\" component={AddLiquidityParams} />\r\n          <Route exact strict path=\"/remove-liquidity\" component={RemoveLiquidityParams} />\r\n          <Route exact strict path=\"/create-exchange\" component={CreateExchangeParams} />\r\n          <Route\r\n            path=\"/create-exchange/:tokenAddress\"\r\n            render={({ match }) => {\r\n              return (\r\n                <Redirect to={{ pathname: '/create-exchange', state: { tokenAddress: match.params.tokenAddress } }} />\r\n              )\r\n            }}\r\n          />\r\n          <Redirect to=\"/add-liquidity\" />\r\n        </Switch>\r\n      </Suspense>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Panel = styled.div`\r\n  position: relative;\r\n  background-color: ${({ theme }) => theme.concreteGray};\r\n  width: calc(100% - 1rem);\r\n  margin: 0 auto;\r\n  border-radius: 0.625rem;\r\n`\r\n\r\nconst PanelTop = styled.div`\r\n  content: '';\r\n  position: absolute;\r\n  top: -0.5rem;\r\n  left: 0;\r\n  height: 1rem;\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.concreteGray};\r\n`\r\n\r\nconst PanelBottom = styled.div`\r\n  position: absolute;\r\n  top: 80%;\r\n  left: 0;\r\n  height: 1rem;\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.concreteGray};\r\n`\r\n\r\nexport default function OversizedPanel({ hideTop, hideBottom, children }) {\r\n  return (\r\n    <Panel>\r\n      {hideTop || <PanelTop />}\r\n      {children}\r\n      {hideBottom || <PanelBottom />}\r\n    </Panel>\r\n  )\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0.97168 1L6.20532 6L11.439 1\",\n  stroke: \"#2F80ED\"\n});\n\nvar SvgDropdownBlue = function SvgDropdownBlue(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 7,\n    viewBox: \"0 0 12 7\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgDropdownBlue, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/dropdown-blue.80a3ae25.svg\";\nexport { ForwardRef as ReactComponent };"],"sourceRoot":""}