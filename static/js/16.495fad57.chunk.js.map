{"version":3,"sources":["webpack:///./src/assets/images/plus-blue.svg?eec6","pages/Pool/AddLiquidity.js","components/ContextualInfo/index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","stroke","strokeLinecap","_ref","svgRef","title","props","width","height","viewBox","fill","ref","ForwardRef","forwardRef","ALLOWED_SLIPPAGE","ethers","utils","bigNumberify","GAS_MARGIN","BlueSpan","styled","span","theme","royalBlue","NewExchangeWarning","div","NewExchangeWarningText","LastSummaryText","DownArrowBackground","flexRowNoWrap","SummaryPanel","flexColumnNoWrap","ExchangeRateWrapper","doveGray","ExchangeRate","Flex","ColoredWrappedPlus","isError","highSlippageWarning","rest","active","chaliceGray","calculateSlippageBounds","value","offset","mul","minimum","sub","maximum","add","lt","constants","Zero","gt","MaxUint256","calculateMaxOutputVal","initialAddLiquidityState","state","inputValue","ethAmountURL","outputValue","tokenAmountURL","lastEditedField","outputCurrency","tokenURL","addLiquidityStateReducer","action","type","payload","field","getExchangeRate","inputDecimals","outputDecimals","invert","factor","pow","getMarketRate","reserveETH","reserveToken","decimals","AddLiquidity","params","t","useTranslation","useWeb3React","library","account","chainId","urlAddedTokens","token","useEffect","createBrowserHistory","push","window","location","pathname","useReducer","ethAmount","tokenAmount","addLiquidityState","dispatchAddLiquidityState","useState","inputValueParsed","setInputValueParsed","outputValueParsed","setOutputValueParsed","inputError","setInputError","outputError","setOutputError","zeroDecimalError","setZeroDecimalError","brokenTokenWarning","setBrokenTokenWarning","useTokenDetails","symbol","exchangeAddress","exchangeContract","useExchangeContract","totalPoolTokens","setTotalPoolTokens","fetchPoolTokens","useCallback","totalSupply","then","on","removeListener","poolTokenBalance","useAddressBalance","exchangeETHBalance","exchangeTokenBalance","useExchangeReserves","isNewExchange","isZero","poolTokenPercentage","undefined","ethShare","tokenShare","liquidityMinted","inputBalance","outputBalance","ethPerLiquidityToken","tokenPerLiquidityToken","outputValueMax","liquidityTokensMin","marketRate","useMemo","marketRateInverted","renderTransactionDetails","b","text","amountFormatter","Math","min","addTransaction","useTransactionAdder","a","ethTransactionSize","deadline","ceil","Date","now","estimate","addLiquidity","estimatedGasLimit","gasLimit","calculateGasMargin","response","ReactGA","event","category","label","dimension1","hash","toString","formatBalance","brokenTokens","toLowerCase","parsedInputValue","parseUnits","parsedOutputValue","parsedValue","lte","gte","Error","currencyAmount","allowance","useAddressAllowance","showUnlock","setShowUnlock","isActive","isValid","newOutputDetected","INITIAL_TOKENS_CONTEXT","showOutputWarning","setShowOutputWarning","WarningCard","onDismiss","currency","CurrencyInputPanel","extraText","onValueChange","extraTextClickHander","valueToSet","parseEther","selectedTokenAddress","errorMessage","disableTokenSelect","OversizedPanel","alt","description","onCurrencySelected","hideBottom","contextualInfo","ContextualInfo","openDetailsText","closeDetailsText","renderSummary","role","aria-label","style","marginTop","textAlign","disabled","onClick","SummaryWrapper","error","salmonRed","Details","concreteGray","SummaryWrapperContainer","ColoredDropup","ColoredDropdown","showDetails","setState","prevState","renderDetails","Component","defaultProps"],"mappings":"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","file":"static/js/16.495fad57.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M1 6H6M11 6L6 6M6 1V6M6 6L6 11\",\n  stroke: \"#2F80ED\",\n  strokeLinecap: \"round\"\n});\n\nvar SvgPlusBlue = function SvgPlusBlue(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 12,\n    viewBox: \"0 0 12 12\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgPlusBlue, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/plus-blue.899a4aa9.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useReducer, useState, useCallback, useEffect, useMemo } from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { createBrowserHistory } from 'history'\r\nimport { ethers } from 'ethers'\r\nimport ReactGA from 'react-ga'\r\nimport styled from 'styled-components'\r\n\r\nimport { Button } from '../../theme'\r\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\r\nimport OversizedPanel from '../../components/OversizedPanel'\r\nimport ContextualInfo from '../../components/ContextualInfo'\r\nimport { ReactComponent as Plus } from '../../assets/images/plus-blue.svg'\r\nimport WarningCard from '../../components/WarningCard'\r\n\r\nimport { useWeb3React, useExchangeContract } from '../../hooks'\r\nimport { brokenTokens } from '../../constants'\r\nimport { amountFormatter, calculateGasMargin } from '../../utils'\r\nimport { useTransactionAdder } from '../../contexts/Transactions'\r\nimport { useTokenDetails, INITIAL_TOKENS_CONTEXT } from '../../contexts/Tokens'\r\nimport { useAddressBalance, useExchangeReserves } from '../../contexts/Balances'\r\nimport { useAddressAllowance } from '../../contexts/Allowances'\r\n\r\nconst INPUT = 0\r\nconst OUTPUT = 1\r\n\r\n// denominated in bips\r\nconst ALLOWED_SLIPPAGE = ethers.utils.bigNumberify(200)\r\n\r\n// denominated in seconds\r\nconst DEADLINE_FROM_NOW = 60 * 15\r\n\r\n// denominated in bips\r\nconst GAS_MARGIN = ethers.utils.bigNumberify(1000)\r\n\r\nconst BlueSpan = styled.span`\r\n  color: ${({ theme }) => theme.royalBlue};\r\n`\r\n\r\nconst NewExchangeWarning = styled.div`\r\n  margin-top: 1rem;\r\n  padding: 1rem;\r\n\r\n  border: 1px solid rgba($pizazz-orange, 0.4);\r\n  background-color: rgba($pizazz-orange, 0.1);\r\n  border-radius: 1rem;\r\n`\r\n\r\nconst NewExchangeWarningText = styled.div`\r\n  font-size: 0.8rem;\r\n  line-height: 1rem;\r\n  text-align: center;\r\n\r\n  :first-child {\r\n    padding-bottom: 0.3rem;\r\n    font-weight: 500;\r\n  }\r\n`\r\n\r\nconst LastSummaryText = styled.div`\r\n  margin-top: 1rem;\r\n`\r\n\r\nconst DownArrowBackground = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap}\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\nconst SummaryPanel = styled.div`\r\n  ${({ theme }) => theme.flexColumnNoWrap}\r\n  padding: 1rem 0;\r\n`\r\n\r\nconst ExchangeRateWrapper = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap};\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.doveGray};\r\n  font-size: 0.75rem;\r\n  padding: 0.25rem 1rem 0;\r\n`\r\n\r\nconst ExchangeRate = styled.span`\r\n  flex: 1 1 auto;\r\n  width: 0;\r\n  color: ${({ theme }) => theme.doveGray};\r\n`\r\n\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 2rem;\r\n\r\n  button {\r\n    max-width: 20rem;\r\n  }\r\n`\r\n\r\nconst WrappedPlus = ({ isError, highSlippageWarning, ...rest }) => <Plus {...rest} />\r\nconst ColoredWrappedPlus = styled(WrappedPlus)`\r\n  width: 0.625rem;\r\n  height: 0.625rem;\r\n  position: relative;\r\n  padding: 0.875rem;\r\n  path {\r\n    stroke: ${({ active, theme }) => (active ? theme.royalBlue : theme.chaliceGray)};\r\n  }\r\n`\r\n\r\nfunction calculateSlippageBounds(value) {\r\n  if (value) {\r\n    const offset = value.mul(ALLOWED_SLIPPAGE).div(ethers.utils.bigNumberify(10000))\r\n    const minimum = value.sub(offset)\r\n    const maximum = value.add(offset)\r\n    return {\r\n      minimum: minimum.lt(ethers.constants.Zero) ? ethers.constants.Zero : minimum,\r\n      maximum: maximum.gt(ethers.constants.MaxUint256) ? ethers.constants.MaxUint256 : maximum\r\n    }\r\n  } else {\r\n    return {}\r\n  }\r\n}\r\n\r\nfunction calculateMaxOutputVal(value) {\r\n  if (value) {\r\n    return value.mul(ethers.utils.bigNumberify(10000)).div(ALLOWED_SLIPPAGE.add(ethers.utils.bigNumberify(10000)))\r\n  }\r\n}\r\n\r\nfunction initialAddLiquidityState(state) {\r\n  return {\r\n    inputValue: state.ethAmountURL ? state.ethAmountURL : '',\r\n    outputValue: state.tokenAmountURL && !state.ethAmountURL ? state.tokenAmountURL : '',\r\n    lastEditedField: state.tokenAmountURL && state.ethAmountURL === '' ? OUTPUT : INPUT,\r\n    outputCurrency: state.tokenURL ? state.tokenURL : ''\r\n  }\r\n}\r\n\r\nfunction addLiquidityStateReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SELECT_CURRENCY': {\r\n      return {\r\n        ...state,\r\n        outputCurrency: action.payload\r\n      }\r\n    }\r\n    case 'UPDATE_VALUE': {\r\n      const { inputValue, outputValue } = state\r\n      const { field, value } = action.payload\r\n      return {\r\n        ...state,\r\n        inputValue: field === INPUT ? value : inputValue,\r\n        outputValue: field === OUTPUT ? value : outputValue,\r\n        lastEditedField: field\r\n      }\r\n    }\r\n    case 'UPDATE_DEPENDENT_VALUE': {\r\n      const { inputValue, outputValue } = state\r\n      const { field, value } = action.payload\r\n      return {\r\n        ...state,\r\n        inputValue: field === INPUT ? value : inputValue,\r\n        outputValue: field === OUTPUT ? value : outputValue\r\n      }\r\n    }\r\n    default: {\r\n      return initialAddLiquidityState()\r\n    }\r\n  }\r\n}\r\n\r\nfunction getExchangeRate(inputValue, inputDecimals, outputValue, outputDecimals, invert = false) {\r\n  try {\r\n    if (\r\n      inputValue &&\r\n      (inputDecimals || inputDecimals === 0) &&\r\n      outputValue &&\r\n      (outputDecimals || outputDecimals === 0)\r\n    ) {\r\n      const factor = ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))\r\n\r\n      if (invert) {\r\n        return inputValue\r\n          .mul(factor)\r\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\r\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\r\n          .div(outputValue)\r\n      } else {\r\n        return outputValue\r\n          .mul(factor)\r\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\r\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\r\n          .div(inputValue)\r\n      }\r\n    }\r\n  } catch {}\r\n}\r\n\r\nfunction getMarketRate(reserveETH, reserveToken, decimals, invert = false) {\r\n  return getExchangeRate(reserveETH, 18, reserveToken, decimals, invert)\r\n}\r\n\r\nexport default function AddLiquidity({ params }) {\r\n  const { t } = useTranslation()\r\n  const { library, account, active, chainId } = useWeb3React()\r\n\r\n  const urlAddedTokens = {}\r\n  if (params.token) {\r\n    urlAddedTokens[params.token] = true\r\n  }\r\n\r\n  // clear url of query\r\n  useEffect(() => {\r\n    const history = createBrowserHistory()\r\n    history.push(window.location.pathname + '')\r\n  }, [])\r\n\r\n  const [addLiquidityState, dispatchAddLiquidityState] = useReducer(\r\n    addLiquidityStateReducer,\r\n    { ethAmountURL: params.ethAmount, tokenAmountURL: params.tokenAmount, tokenURL: params.token },\r\n    initialAddLiquidityState\r\n  )\r\n  const { inputValue, outputValue, lastEditedField, outputCurrency } = addLiquidityState\r\n  const inputCurrency = 'ETH'\r\n\r\n  const [inputValueParsed, setInputValueParsed] = useState()\r\n  const [outputValueParsed, setOutputValueParsed] = useState()\r\n  const [inputError, setInputError] = useState()\r\n  const [outputError, setOutputError] = useState()\r\n  const [zeroDecimalError, setZeroDecimalError] = useState()\r\n\r\n  var [brokenTokenWarning, setBrokenTokenWarning] = useState()\r\n\r\n  const { symbol, decimals, exchangeAddress } = useTokenDetails(outputCurrency)\r\n  const exchangeContract = useExchangeContract(exchangeAddress)\r\n  \r\n  // LAND & CDAI NOT SUPPORTED\r\n  if (symbol === 'CDAI' || symbol === 'LAND') {\r\n    brokenTokenWarning = true;\r\n  }\r\n  const [totalPoolTokens, setTotalPoolTokens] = useState()\r\n  const fetchPoolTokens = useCallback(() => {\r\n    if (exchangeContract) {\r\n      exchangeContract.totalSupply().then(totalSupply => {\r\n        setTotalPoolTokens(totalSupply)\r\n      })\r\n    }\r\n  }, [exchangeContract])\r\n  useEffect(() => {\r\n    fetchPoolTokens()\r\n    library.on('block', fetchPoolTokens)\r\n\r\n    return () => {\r\n      library.removeListener('block', fetchPoolTokens)\r\n    }\r\n  }, [fetchPoolTokens, library])\r\n\r\n  const poolTokenBalance = useAddressBalance(account, exchangeAddress)\r\n  const exchangeETHBalance = useAddressBalance(exchangeAddress, 'ETH')\r\n  const exchangeTokenBalance = useAddressBalance(exchangeAddress, outputCurrency)\r\n\r\n  const { reserveETH, reserveToken } = useExchangeReserves(outputCurrency)\r\n  const isNewExchange = !!(reserveETH && reserveToken && reserveETH.isZero() && reserveToken.isZero())\r\n\r\n  // 18 decimals\r\n  const poolTokenPercentage =\r\n    poolTokenBalance && totalPoolTokens && isNewExchange === false && !totalPoolTokens.isZero()\r\n      ? poolTokenBalance.mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))).div(totalPoolTokens)\r\n      : undefined\r\n  const ethShare =\r\n    exchangeETHBalance && poolTokenPercentage\r\n      ? exchangeETHBalance\r\n          .mul(poolTokenPercentage)\r\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\r\n      : undefined\r\n  const tokenShare =\r\n    exchangeTokenBalance && poolTokenPercentage\r\n      ? exchangeTokenBalance\r\n          .mul(poolTokenPercentage)\r\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\r\n      : undefined\r\n\r\n  const liquidityMinted = isNewExchange\r\n    ? inputValueParsed\r\n    : totalPoolTokens && inputValueParsed && exchangeETHBalance && !exchangeETHBalance.isZero()\r\n    ? totalPoolTokens.mul(inputValueParsed).div(exchangeETHBalance)\r\n    : undefined\r\n\r\n  // user balances\r\n  const inputBalance = useAddressBalance(account, inputCurrency)\r\n  const outputBalance = useAddressBalance(account, outputCurrency)\r\n\r\n  const ethPerLiquidityToken =\r\n    exchangeETHBalance && totalPoolTokens && isNewExchange === false && !totalPoolTokens.isZero()\r\n      ? exchangeETHBalance.mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))).div(totalPoolTokens)\r\n      : undefined\r\n  const tokenPerLiquidityToken =\r\n    exchangeTokenBalance && totalPoolTokens && isNewExchange === false && !totalPoolTokens.isZero()\r\n      ? exchangeTokenBalance.mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))).div(totalPoolTokens)\r\n      : undefined\r\n\r\n  const outputValueMax = outputValueParsed && calculateSlippageBounds(outputValueParsed).maximum\r\n  const liquidityTokensMin = liquidityMinted && calculateSlippageBounds(liquidityMinted).minimum\r\n\r\n  const marketRate = useMemo(() => {\r\n    return getMarketRate(reserveETH, reserveToken, decimals)\r\n  }, [reserveETH, reserveToken, decimals])\r\n  const marketRateInverted = useMemo(() => {\r\n    return getMarketRate(reserveETH, reserveToken, decimals, true)\r\n  }, [reserveETH, reserveToken, decimals])\r\n\r\n  function renderTransactionDetails() {\r\n    const b = text => <BlueSpan>{text}</BlueSpan>\r\n\r\n    if (isNewExchange) {\r\n      return (\r\n        <div>\r\n          <div>\r\n            {t('youAreAdding')} {b(`${inputValue} ETH`)} {t('and')} {b(`${outputValue} ${symbol}`)} {t('intoPool')}\r\n          </div>\r\n          <LastSummaryText>\r\n            {t('youAreSettingExRate')}{' '}\r\n            {b(\r\n              `1 ETH = ${amountFormatter(\r\n                getMarketRate(inputValueParsed, outputValueParsed, decimals),\r\n                18,\r\n                4,\r\n                false\r\n              )} ${symbol}`\r\n            )}\r\n            .\r\n          </LastSummaryText>\r\n          <LastSummaryText>\r\n            {t('youWillMint')} {b(`${inputValue}`)} {t('liquidityTokens')}\r\n          </LastSummaryText>\r\n          <LastSummaryText>{t('totalSupplyIs0')}</LastSummaryText>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <>\r\n          <div>\r\n            {t('youAreAdding')} {b(`${amountFormatter(inputValueParsed, 18, 4)} ETH`)} {t('and')} {'at most'}{' '}\r\n            {b(`${amountFormatter(outputValueMax, decimals, Math.min(decimals, 4))} ${symbol}`)} {t('intoPool')}\r\n          </div>\r\n          <LastSummaryText>\r\n            {t('youWillMint')} {b(amountFormatter(liquidityMinted, 18, 4))} {t('liquidityTokens')}\r\n          </LastSummaryText>\r\n          <LastSummaryText>\r\n            {t('totalSupplyIs')} {b(amountFormatter(totalPoolTokens, 18, 4))}\r\n          </LastSummaryText>\r\n          <LastSummaryText>\r\n            {t('tokenWorth')} {b(amountFormatter(ethPerLiquidityToken, 18, 4))} ETH {t('and')}{' '}\r\n            {b(amountFormatter(tokenPerLiquidityToken, decimals, Math.min(decimals, 4)))} {symbol}\r\n          </LastSummaryText>\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  function renderSummary() {\r\n    let contextualInfo = ''\r\n    let isError = false\r\n    if (brokenTokenWarning) {\r\n      contextualInfo = t('brokenToken')\r\n      isError = true\r\n    } else if (zeroDecimalError) {\r\n      contextualInfo = zeroDecimalError\r\n    } else if (inputError || outputError) {\r\n      contextualInfo = inputError || outputError\r\n      isError = true\r\n    } else if (!inputCurrency || !outputCurrency) {\r\n      contextualInfo = t('selectTokenCont')\r\n    } else if (!inputValue) {\r\n      contextualInfo = t('enterValueCont')\r\n    } else if (!account) {\r\n      contextualInfo = t('noWallet')\r\n      isError = true\r\n    }\r\n\r\n    return (\r\n      <ContextualInfo\r\n        openDetailsText={t('transactionDetails')}\r\n        closeDetailsText={t('hideDetails')}\r\n        contextualInfo={contextualInfo}\r\n        isError={isError}\r\n        renderTransactionDetails={renderTransactionDetails}\r\n      />\r\n    )\r\n  }\r\n\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  async function onAddLiquidity() {\r\n    // take ETH amount, multiplied by ETH rate and 2 for total tx size\r\n    let ethTransactionSize = (inputValueParsed / 1e18) * 2\r\n\r\n    const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW\r\n\r\n    const estimatedGasLimit = await exchangeContract.estimate.addLiquidity(\r\n      isNewExchange ? ethers.constants.Zero : liquidityTokensMin,\r\n      isNewExchange ? outputValueParsed : outputValueMax,\r\n      deadline,\r\n      {\r\n        value: inputValueParsed\r\n      }\r\n    )\r\n\r\n    const gasLimit = calculateGasMargin(estimatedGasLimit, GAS_MARGIN)\r\n\r\n    exchangeContract\r\n      .addLiquidity(\r\n        isNewExchange ? ethers.constants.Zero : liquidityTokensMin,\r\n        isNewExchange ? outputValueParsed : outputValueMax,\r\n        deadline,\r\n        {\r\n          value: inputValueParsed,\r\n          gasLimit\r\n        }\r\n      )\r\n      .then(response => {\r\n        // log pool added to and total usd amount\r\n        ReactGA.event({\r\n          category: 'Transaction',\r\n          action: 'Add Liquidity',\r\n          label: outputCurrency,\r\n          value: ethTransactionSize,\r\n          dimension1: response.hash\r\n        })\r\n        ReactGA.event({\r\n          category: 'Hash',\r\n          action: response.hash,\r\n          label: ethTransactionSize.toString()\r\n        })\r\n        addTransaction(response)\r\n      })\r\n  }\r\n\r\n  function formatBalance(value) {\r\n    return `Balance: ${value}`\r\n  }\r\n\r\n  useEffect(() => {\r\n    setBrokenTokenWarning(false)\r\n    for (let i = 0; i < brokenTokens.length; i++) {\r\n      if (brokenTokens[i].toLowerCase() === outputCurrency.toLowerCase()) {\r\n        setBrokenTokenWarning(true)\r\n      }\r\n    }\r\n  }, [outputCurrency])\r\n\r\n  useEffect(() => {\r\n    if (isNewExchange) {\r\n      setZeroDecimalError()\r\n      if (inputValue) {\r\n        const parsedInputValue = ethers.utils.parseUnits(inputValue, 18)\r\n        setInputValueParsed(parsedInputValue)\r\n      }\r\n      if (outputValue) {\r\n        try {\r\n          const parsedOutputValue = ethers.utils.parseUnits(outputValue, decimals)\r\n          setOutputValueParsed(parsedOutputValue)\r\n        } catch {\r\n          setZeroDecimalError('Invalid input. For 0 decimal tokens only supply whole number token amounts.')\r\n        }\r\n      }\r\n    }\r\n  }, [decimals, inputValue, isNewExchange, outputValue])\r\n\r\n  // parse input value\r\n  useEffect(() => {\r\n    if (\r\n      isNewExchange === false &&\r\n      inputValue &&\r\n      marketRate &&\r\n      lastEditedField === INPUT &&\r\n      (decimals || decimals === 0)\r\n    ) {\r\n      try {\r\n        const parsedValue = ethers.utils.parseUnits(inputValue, 18)\r\n\r\n        if (parsedValue.lte(ethers.constants.Zero) || parsedValue.gte(ethers.constants.MaxUint256)) {\r\n          throw Error()\r\n        }\r\n\r\n        setInputValueParsed(parsedValue)\r\n\r\n        const currencyAmount = marketRate\r\n          .mul(parsedValue)\r\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\r\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18 - decimals)))\r\n\r\n        setOutputValueParsed(currencyAmount)\r\n        dispatchAddLiquidityState({\r\n          type: 'UPDATE_DEPENDENT_VALUE',\r\n          payload: { field: OUTPUT, value: amountFormatter(currencyAmount, decimals, Math.min(decimals, 4), false) }\r\n        })\r\n\r\n        return () => {\r\n          setOutputError()\r\n          setInputValueParsed()\r\n          setOutputValueParsed()\r\n          dispatchAddLiquidityState({\r\n            type: 'UPDATE_DEPENDENT_VALUE',\r\n            payload: { field: OUTPUT, value: '' }\r\n          })\r\n        }\r\n      } catch {\r\n        setOutputError(t('inputNotValid'))\r\n      }\r\n    }\r\n  }, [inputValue, isNewExchange, lastEditedField, marketRate, decimals, t])\r\n\r\n  // parse output value\r\n  useEffect(() => {\r\n    if (\r\n      isNewExchange === false &&\r\n      outputValue &&\r\n      marketRateInverted &&\r\n      lastEditedField === OUTPUT &&\r\n      (decimals || decimals === 0)\r\n    ) {\r\n      try {\r\n        const parsedValue = ethers.utils.parseUnits(outputValue, decimals)\r\n\r\n        if (parsedValue.lte(ethers.constants.Zero) || parsedValue.gte(ethers.constants.MaxUint256)) {\r\n          throw Error()\r\n        }\r\n\r\n        setOutputValueParsed(parsedValue)\r\n\r\n        const currencyAmount = marketRateInverted\r\n          .mul(parsedValue)\r\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(decimals)))\r\n\r\n        setInputValueParsed(currencyAmount)\r\n        dispatchAddLiquidityState({\r\n          type: 'UPDATE_DEPENDENT_VALUE',\r\n          payload: { field: INPUT, value: amountFormatter(currencyAmount, 18, 4, false) }\r\n        })\r\n\r\n        return () => {\r\n          setInputError()\r\n          setOutputValueParsed()\r\n          setInputValueParsed()\r\n          dispatchAddLiquidityState({\r\n            type: 'UPDATE_DEPENDENT_VALUE',\r\n            payload: { field: INPUT, value: '' }\r\n          })\r\n        }\r\n      } catch {\r\n        setInputError(t('inputNotValid'))\r\n      }\r\n    }\r\n  }, [outputValue, isNewExchange, lastEditedField, marketRateInverted, decimals, t])\r\n\r\n  // input validation\r\n  useEffect(() => {\r\n    if (inputValueParsed && inputBalance) {\r\n      if (inputValueParsed.gt(inputBalance)) {\r\n        setInputError(t('insufficientBalance'))\r\n      } else {\r\n        setInputError(null)\r\n      }\r\n    }\r\n\r\n    if (outputValueMax && outputBalance) {\r\n      if (outputValueMax.gt(outputBalance)) {\r\n        setOutputError(t('insufficientBalance'))\r\n      } else {\r\n        setOutputError(null)\r\n      }\r\n    }\r\n  }, [inputValueParsed, inputBalance, outputValueMax, outputBalance, t])\r\n\r\n  const allowance = useAddressAllowance(account, outputCurrency, exchangeAddress)\r\n\r\n  const [showUnlock, setShowUnlock] = useState(false)\r\n  useEffect(() => {\r\n    if (outputValueParsed && allowance) {\r\n      if (allowance.lt(outputValueParsed)) {\r\n        setOutputError(t('unlockTokenCont'))\r\n        setShowUnlock(true)\r\n      }\r\n      return () => {\r\n        setOutputError()\r\n        setShowUnlock(false)\r\n      }\r\n    }\r\n  }, [outputValueParsed, allowance, t])\r\n\r\n  const isActive = active && account\r\n  const isValid =\r\n    (inputError === null || outputError === null) && !zeroDecimalError && !showUnlock && !brokenTokenWarning\r\n\r\n  const newOutputDetected =\r\n    outputCurrency !== 'ETH' && outputCurrency && !INITIAL_TOKENS_CONTEXT[chainId].hasOwnProperty(outputCurrency)\r\n\r\n  const [showOutputWarning, setShowOutputWarning] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (newOutputDetected) {\r\n      setShowOutputWarning(true)\r\n    } else {\r\n      setShowOutputWarning(false)\r\n    }\r\n  }, [newOutputDetected, setShowOutputWarning])\r\n  return (\r\n    <>\r\n      {showOutputWarning && (\r\n        <WarningCard\r\n          onDismiss={() => {\r\n            setShowOutputWarning(false)\r\n          }}\r\n          urlAddedTokens={urlAddedTokens}\r\n          currency={outputCurrency}\r\n        />\r\n      )}\r\n      <CurrencyInputPanel\r\n        title={t('deposit')}\r\n        extraText={inputBalance && formatBalance(amountFormatter(inputBalance, 18, 4))}\r\n        onValueChange={inputValue => {\r\n          dispatchAddLiquidityState({ type: 'UPDATE_VALUE', payload: { value: inputValue, field: INPUT } })\r\n        }}\r\n        extraTextClickHander={() => {\r\n          if (inputBalance) {\r\n            const valueToSet = inputBalance.sub(ethers.utils.parseEther('.1'))\r\n            if (valueToSet.gt(ethers.constants.Zero)) {\r\n              dispatchAddLiquidityState({\r\n                type: 'UPDATE_VALUE',\r\n                payload: { value: amountFormatter(valueToSet, 18, 18, false), field: INPUT }\r\n              })\r\n            }\r\n          }\r\n        }}\r\n        selectedTokenAddress=\"ETH\"\r\n        value={inputValue}\r\n        errorMessage={inputError}\r\n        disableTokenSelect\r\n      />\r\n      <OversizedPanel>\r\n        <DownArrowBackground>\r\n          <ColoredWrappedPlus active={isActive} alt=\"plus\" />\r\n        </DownArrowBackground>\r\n      </OversizedPanel>\r\n      <CurrencyInputPanel\r\n        title={t('deposit')}\r\n        description={isNewExchange ? '' : outputValue ? `(${t('estimated')})` : ''}\r\n        extraText={\r\n          outputBalance && decimals && formatBalance(amountFormatter(outputBalance, decimals, Math.min(decimals, 4)))\r\n        }\r\n        urlAddedTokens={urlAddedTokens}\r\n        selectedTokenAddress={outputCurrency}\r\n        onCurrencySelected={outputCurrency => {\r\n          dispatchAddLiquidityState({ type: 'SELECT_CURRENCY', payload: outputCurrency })\r\n        }}\r\n        onValueChange={outputValue => {\r\n          dispatchAddLiquidityState({ type: 'UPDATE_VALUE', payload: { value: outputValue, field: OUTPUT } })\r\n        }}\r\n        extraTextClickHander={() => {\r\n          if (outputBalance) {\r\n            dispatchAddLiquidityState({\r\n              type: 'UPDATE_VALUE',\r\n              payload: {\r\n                value: amountFormatter(calculateMaxOutputVal(outputBalance), decimals, decimals, false),\r\n                field: OUTPUT\r\n              }\r\n            })\r\n          }\r\n        }}\r\n        value={outputValue}\r\n        showUnlock={showUnlock}\r\n        errorMessage={outputError}\r\n      />\r\n      <OversizedPanel hideBottom>\r\n        <SummaryPanel>\r\n          <ExchangeRateWrapper>\r\n            <ExchangeRate>{t('exchangeRate')}</ExchangeRate>\r\n            <span>{marketRate ? `1 ETH = ${amountFormatter(marketRate, 18, 4)} ${symbol}` : ' - '}</span>\r\n          </ExchangeRateWrapper>\r\n          <ExchangeRateWrapper>\r\n            <ExchangeRate>{t('currentPoolSize')}</ExchangeRate>\r\n            <span>\r\n              {exchangeETHBalance && exchangeTokenBalance\r\n                ? `${amountFormatter(exchangeETHBalance, 18, 4)} ETH + ${amountFormatter(\r\n                    exchangeTokenBalance,\r\n                    decimals,\r\n                    Math.min(4, decimals)\r\n                  )} ${symbol}`\r\n                : ' - '}\r\n            </span>\r\n          </ExchangeRateWrapper>\r\n          <ExchangeRateWrapper>\r\n            <ExchangeRate>\r\n              {t('yourPoolShare')} ({exchangeETHBalance && amountFormatter(poolTokenPercentage, 16, 2)}%)\r\n            </ExchangeRate>\r\n            <span>\r\n              {ethShare && tokenShare\r\n                ? `${amountFormatter(ethShare, 18, 4)} ETH + ${amountFormatter(\r\n                    tokenShare,\r\n                    decimals,\r\n                    Math.min(4, decimals)\r\n                  )} ${symbol}`\r\n                : ' - '}\r\n            </span>\r\n          </ExchangeRateWrapper>\r\n        </SummaryPanel>\r\n      </OversizedPanel>\r\n      {renderSummary()}\r\n      {isNewExchange ? (\r\n        <NewExchangeWarning>\r\n          <NewExchangeWarningText>\r\n            <span role=\"img\" aria-label=\"first-liquidity\">\r\n              🚰\r\n            </span>{' '}\r\n            {t('firstLiquidity')}\r\n          </NewExchangeWarningText>\r\n          <NewExchangeWarningText style={{ marginTop: '10px' }}>\r\n            {t('initialExchangeRate', { symbol })}\r\n          </NewExchangeWarningText>\r\n        </NewExchangeWarning>\r\n      ) : null}\r\n      {isNewExchange && (\r\n        <NewExchangeWarningText style={{ textAlign: 'center', marginTop: '10px' }}>\r\n          {t('initialWarning')}\r\n        </NewExchangeWarningText>\r\n      )}\r\n      <Flex>\r\n        <Button disabled={!isValid} onClick={onAddLiquidity}>\r\n          {t('addLiquidity')}\r\n        </Button>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\nimport ReactGA from 'react-ga'\r\nimport { ReactComponent as Dropup } from '../../assets/images/dropup-blue.svg'\r\nimport { ReactComponent as Dropdown } from '../../assets/images/dropdown-blue.svg'\r\n\r\nconst SummaryWrapper = styled.div`\r\n  color: ${({ error, theme }) => (error ? theme.salmonRed : theme.doveGray)};\r\n  font-size: 0.75rem;\r\n  text-align: center;\r\n  margin-top: 1rem;\r\n  padding-top: 1rem;\r\n`\r\n\r\nconst Details = styled.div`\r\n  background-color: ${({ theme }) => theme.concreteGray};\r\n  padding: 1.5rem;\r\n  border-radius: 1rem;\r\n  font-size: 0.75rem;\r\n  margin-top: 1rem;\r\n`\r\n\r\nconst SummaryWrapperContainer = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap};\r\n  color: ${({ theme }) => theme.royalBlue};\r\n  text-align: center;\r\n  margin-top: 1rem;\r\n  padding-top: 1rem;\r\n  cursor: pointer;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 0.75rem;\r\n\r\n  span {\r\n    margin-right: 12px;\r\n  }\r\n\r\n  img {\r\n    height: 0.75rem;\r\n    width: 0.75rem;\r\n  }\r\n`\r\n\r\nconst WrappedDropup = ({ isError, highSlippageWarning, ...rest }) => <Dropup {...rest} />\r\nconst ColoredDropup = styled(WrappedDropup)`\r\n  path {\r\n    stroke: ${({ theme }) => theme.royalBlue};\r\n  }\r\n`\r\n\r\nconst WrappedDropdown = ({ isError, highSlippageWarning, ...rest }) => <Dropdown {...rest} />\r\nconst ColoredDropdown = styled(WrappedDropdown)`\r\n  path {\r\n    stroke: ${({ theme }) => theme.royalBlue};\r\n  }\r\n`\r\n\r\nclass ContextualInfo extends Component {\r\n  static propTypes = {\r\n    openDetailsText: PropTypes.string,\r\n    renderTransactionDetails: PropTypes.func,\r\n    contextualInfo: PropTypes.string,\r\n    isError: PropTypes.bool\r\n  }\r\n\r\n  static defaultProps = {\r\n    openDetailsText: 'Advanced Details',\r\n    closeDetailsText: 'Hide Advanced',\r\n    renderTransactionDetails() {},\r\n    contextualInfo: '',\r\n    isError: false\r\n  }\r\n\r\n  state = {\r\n    showDetails: false\r\n  }\r\n\r\n  renderDetails() {\r\n    if (!this.state.showDetails) {\r\n      return null\r\n    }\r\n\r\n    return <Details>{this.props.renderTransactionDetails()}</Details>\r\n  }\r\n\r\n  render() {\r\n    const { openDetailsText, closeDetailsText, contextualInfo, isError } = this.props\r\n\r\n    if (contextualInfo) {\r\n      return <SummaryWrapper error={isError}>{contextualInfo}</SummaryWrapper>\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <SummaryWrapperContainer\r\n          onClick={() => {\r\n            !this.state.showDetails &&\r\n              ReactGA.event({\r\n                category: 'Advanced Interaction',\r\n                action: 'Open Advanced Details',\r\n                label: 'Pool Page Details'\r\n              })\r\n            this.setState(prevState => {\r\n              return { showDetails: !prevState.showDetails }\r\n            })\r\n          }}\r\n        >\r\n          {!this.state.showDetails ? (\r\n            <>\r\n              <span>{openDetailsText}</span>\r\n              <ColoredDropup />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <span>{closeDetailsText}</span>\r\n              <ColoredDropdown />\r\n            </>\r\n          )}\r\n        </SummaryWrapperContainer>\r\n        {this.renderDetails()}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContextualInfo\r\n"],"sourceRoot":""}