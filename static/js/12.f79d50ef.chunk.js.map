{"version":3,"sources":["pages/Pool/RemoveLiquidity.js","assets/svg/SVGArrowDown.js","components/ContextualInfo/index.js"],"names":["ALLOWED_SLIPPAGE","ethers","utils","bigNumberify","GAS_MARGIN","BlueSpan","styled","span","theme","royalBlue","DownArrowBackground","div","flexRowNoWrap","DownArrow","ArrowDown","active","doveGray","RemoveLiquidityOutput","RemoveLiquidityOutputText","RemoveLiquidityOutputPlus","SummaryPanel","flexColumnNoWrap","LastSummaryText","ExchangeRateWrapper","ExchangeRate","Flex","getExchangeRate","inputValue","inputDecimals","outputValue","outputDecimals","invert","factor","pow","mul","calculateSlippageBounds","value","offset","minimum","sub","maximum","add","lt","constants","Zero","gt","MaxUint256","RemoveLiquidity","params","t","useTranslation","useWeb3React","library","account","chainId","addTransaction","useTransactionAdder","useState","brokenTokenWarning","setBrokenTokenWarning","useEffect","createBrowserHistory","push","window","location","pathname","poolTokenAddress","outputCurrency","setOutputCurrency","poolTokenAmount","setValue","inputError","setInputError","valueParsed","setValueParsed","i","brokenTokens","length","toLowerCase","parsedValue","parseUnits","useTokenDetails","symbol","decimals","exchangeAddress","totalPoolTokens","setTotalPoolTokens","poolTokenBalance","useAddressBalance","exchangeETHBalance","exchangeTokenBalance","urlAddedTokens","exchange","useExchangeContract","ownershipPercentage","isZero","undefined","ownershipPercentageFormatted","amountFormatter","ETHOwnShare","TokenOwnShare","ETHPer","tokenPer","ethWithdrawn","tokenWithdrawn","ethWithdrawnMin","tokenWithdrawnMin","fetchPoolTokens","useCallback","totalSupply","then","a","ethTransactionSize","deadline","Math","ceil","Date","now","estimate","removeLiquidity","estimatedGasLimit","gasLimit","calculateGasMargin","response","ReactGA","event","category","action","label","dimension1","hash","toString","on","removeListener","b","text","renderTransactionDetails","min","isActive","isValid","marketRate","reserveETH","reserveToken","getMarketRate","newOutputDetected","INITIAL_TOKENS_CONTEXT","hasOwnProperty","showCustomTokenWarning","setShowCustomTokenWarning","onDismiss","currency","title","extraText","formatBalance","extraTextClickHander","valueToSet","onCurrencySelected","onValueChange","errorMessage","selectedTokenAddress","hideETH","alt","description","key","renderInput","disableTokenSelect","disableUnlock","hideBottom","contextualInfo","isError","openDetailsText","closeDetailsText","renderSummary","disabled","onClick","SVGArrowDown","props","width","height","viewBox","fill","d","SummaryWrapper","error","salmonRed","Details","concreteGray","SummaryWrapperContainer","ColoredDropup","highSlippageWarning","rest","ColoredDropdown","ContextualInfo","state","showDetails","this","setState","prevState","renderDetails","Component","defaultProps"],"mappings":"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","file":"static/js/12.f79d50ef.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\nimport ReactGA from 'react-ga'\r\nimport { createBrowserHistory } from 'history'\r\nimport { ethers } from 'ethers'\r\nimport styled from 'styled-components'\r\n\r\nimport { useWeb3React, useExchangeContract } from '../../hooks'\r\nimport { useTransactionAdder } from '../../contexts/Transactions'\r\nimport { useTokenDetails, INITIAL_TOKENS_CONTEXT } from '../../contexts/Tokens'\r\nimport { useAddressBalance } from '../../contexts/Balances'\r\n\r\nimport { calculateGasMargin, amountFormatter } from '../../utils'\r\nimport { brokenTokens } from '../../constants'\r\n\r\nimport { Button } from '../../theme'\r\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\r\nimport ContextualInfo from '../../components/ContextualInfo'\r\nimport OversizedPanel from '../../components/OversizedPanel'\r\nimport ArrowDown from '../../assets/svg/SVGArrowDown'\r\nimport WarningCard from '../../components/WarningCard'\r\n\r\n// denominated in bips\r\nconst ALLOWED_SLIPPAGE = ethers.utils.bigNumberify(200)\r\n\r\n// denominated in seconds\r\nconst DEADLINE_FROM_NOW = 60 * 15\r\n\r\n// denominated in bips\r\nconst GAS_MARGIN = ethers.utils.bigNumberify(1000)\r\n\r\nconst BlueSpan = styled.span`\r\n  color: ${({ theme }) => theme.royalBlue};\r\n`\r\n\r\nconst DownArrowBackground = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap}\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst DownArrow = styled(ArrowDown)`\r\n  ${({ theme }) => theme.flexRowNoWrap}\r\n  color: ${({ theme, active }) => (active ? theme.royalBlue : theme.doveGray)};\r\n  width: 0.625rem;\r\n  height: 0.625rem;\r\n  position: relative;\r\n  padding: 0.875rem;\r\n`\r\n\r\nconst RemoveLiquidityOutput = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap}\r\n  min-height: 3.5rem;\r\n`\r\n\r\nconst RemoveLiquidityOutputText = styled.div`\r\n  font-size: 1.25rem;\r\n  line-height: 1.5rem;\r\n  padding: 1rem 0.75rem;\r\n`\r\n\r\nconst RemoveLiquidityOutputPlus = styled.div`\r\n  font-size: 1.25rem;\r\n  line-height: 1.5rem;\r\n  padding: 1rem 0;\r\n`\r\n\r\nconst SummaryPanel = styled.div`\r\n  ${({ theme }) => theme.flexColumnNoWrap}\r\n  padding: 1rem 0;\r\n`\r\n\r\nconst LastSummaryText = styled.div`\r\n  margin-top: 1rem;\r\n`\r\n\r\nconst ExchangeRateWrapper = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap};\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.doveGray};\r\n  font-size: 0.75rem;\r\n  padding: 0.25rem 1rem 0;\r\n`\r\n\r\nconst ExchangeRate = styled.span`\r\n  flex: 1 1 auto;\r\n  width: 0;\r\n  color: ${({ theme }) => theme.doveGray};\r\n`\r\n\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 2rem;\r\n\r\n  button {\r\n    max-width: 20rem;\r\n  }\r\n`\r\n\r\nfunction getExchangeRate(inputValue, inputDecimals, outputValue, outputDecimals, invert = false) {\r\n  try {\r\n    if (\r\n      inputValue &&\r\n      (inputDecimals || inputDecimals === 0) &&\r\n      outputValue &&\r\n      (outputDecimals || outputDecimals === 0)\r\n    ) {\r\n      const factor = ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))\r\n\r\n      if (invert) {\r\n        return inputValue\r\n          .mul(factor)\r\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\r\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\r\n          .div(outputValue)\r\n      } else {\r\n        return outputValue\r\n          .mul(factor)\r\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\r\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\r\n          .div(inputValue)\r\n      }\r\n    }\r\n  } catch {}\r\n}\r\n\r\nfunction getMarketRate(reserveETH, reserveToken, decimals, invert = false) {\r\n  return getExchangeRate(reserveETH, 18, reserveToken, decimals, invert)\r\n}\r\n\r\nfunction calculateSlippageBounds(value) {\r\n  if (value) {\r\n    const offset = value.mul(ALLOWED_SLIPPAGE).div(ethers.utils.bigNumberify(10000))\r\n    const minimum = value.sub(offset)\r\n    const maximum = value.add(offset)\r\n    return {\r\n      minimum: minimum.lt(ethers.constants.Zero) ? ethers.constants.Zero : minimum,\r\n      maximum: maximum.gt(ethers.constants.MaxUint256) ? ethers.constants.MaxUint256 : maximum\r\n    }\r\n  } else {\r\n    return {}\r\n  }\r\n}\r\n\r\nexport default function RemoveLiquidity({ params }) {\r\n  const { t } = useTranslation()\r\n  const { library, account, active, chainId } = useWeb3React()\r\n\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  var [brokenTokenWarning, setBrokenTokenWarning] = useState()\r\n\r\n  // clear url of query\r\n  useEffect(() => {\r\n    const history = createBrowserHistory()\r\n    history.push(window.location.pathname + '')\r\n  }, [])\r\n\r\n  const [outputCurrency, setOutputCurrency] = useState(params.poolTokenAddress)\r\n  const [value, setValue] = useState(params.poolTokenAmount ? params.poolTokenAmount : '')\r\n  const [inputError, setInputError] = useState()\r\n  const [valueParsed, setValueParsed] = useState()\r\n\r\n  useEffect(() => {\r\n    setBrokenTokenWarning(false)\r\n    for (let i = 0; i < brokenTokens.length; i++) {\r\n      if (brokenTokens[i].toLowerCase() === outputCurrency.toLowerCase()) {\r\n        setBrokenTokenWarning(true)\r\n      }\r\n    }\r\n  }, [outputCurrency])\r\n\r\n  // parse value\r\n  useEffect(() => {\r\n    try {\r\n      const parsedValue = ethers.utils.parseUnits(value, 18)\r\n      setValueParsed(parsedValue)\r\n    } catch {\r\n      if (value !== '') {\r\n        setInputError(t('inputNotValid'))\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      setInputError()\r\n      setValueParsed()\r\n    }\r\n  }, [t, value])\r\n\r\n  const { symbol, decimals, exchangeAddress } = useTokenDetails(outputCurrency)\r\n  \r\n  // LAND & CDAI NOT SUPPORTED\r\n  if (symbol === 'CDAI' || symbol === 'LAND') {\r\n    brokenTokenWarning = true;\r\n  }\r\n  const [totalPoolTokens, setTotalPoolTokens] = useState()\r\n  const poolTokenBalance = useAddressBalance(account, exchangeAddress)\r\n  const exchangeETHBalance = useAddressBalance(exchangeAddress, 'ETH')\r\n  const exchangeTokenBalance = useAddressBalance(exchangeAddress, outputCurrency)\r\n\r\n  const urlAddedTokens = {}\r\n  if (params.poolTokenAddress) {\r\n    urlAddedTokens[params.poolTokenAddress] = true\r\n  }\r\n\r\n  // input validation\r\n  useEffect(() => {\r\n    if (valueParsed && poolTokenBalance) {\r\n      if (valueParsed.gt(poolTokenBalance)) {\r\n        setInputError(t('insufficientBalance'))\r\n      } else {\r\n        setInputError(null)\r\n      }\r\n    }\r\n  }, [poolTokenBalance, t, valueParsed])\r\n\r\n  const exchange = useExchangeContract(exchangeAddress)\r\n\r\n  const ownershipPercentage =\r\n    poolTokenBalance && totalPoolTokens && !totalPoolTokens.isZero()\r\n      ? poolTokenBalance.mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))).div(totalPoolTokens)\r\n      : undefined\r\n  const ownershipPercentageFormatted = ownershipPercentage && amountFormatter(ownershipPercentage, 16, 4)\r\n\r\n  const ETHOwnShare =\r\n    exchangeETHBalance &&\r\n    ownershipPercentage &&\r\n    exchangeETHBalance.mul(ownershipPercentage).div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\r\n  const TokenOwnShare =\r\n    exchangeTokenBalance &&\r\n    ownershipPercentage &&\r\n    exchangeTokenBalance.mul(ownershipPercentage).div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\r\n\r\n  const ETHPer = exchangeETHBalance\r\n    ? exchangeETHBalance.mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\r\n    : undefined\r\n  const tokenPer = exchangeTokenBalance\r\n    ? exchangeTokenBalance.mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\r\n    : undefined\r\n\r\n  const ethWithdrawn =\r\n    ETHPer && valueParsed && totalPoolTokens && !totalPoolTokens.isZero()\r\n      ? ETHPer.mul(valueParsed)\r\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\r\n          .div(totalPoolTokens)\r\n      : undefined\r\n  const tokenWithdrawn =\r\n    tokenPer && valueParsed && totalPoolTokens && !totalPoolTokens.isZero()\r\n      ? tokenPer\r\n          .mul(valueParsed)\r\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\r\n          .div(totalPoolTokens)\r\n      : undefined\r\n\r\n  const ethWithdrawnMin = ethWithdrawn ? calculateSlippageBounds(ethWithdrawn).minimum : undefined\r\n  const tokenWithdrawnMin = tokenWithdrawn ? calculateSlippageBounds(tokenWithdrawn).minimum : undefined\r\n\r\n  const fetchPoolTokens = useCallback(() => {\r\n    if (exchange) {\r\n      exchange.totalSupply().then(totalSupply => {\r\n        setTotalPoolTokens(totalSupply)\r\n      })\r\n    }\r\n  }, [exchange])\r\n  useEffect(() => {\r\n    fetchPoolTokens()\r\n    library.on('block', fetchPoolTokens)\r\n\r\n    return () => {\r\n      library.removeListener('block', fetchPoolTokens)\r\n    }\r\n  }, [fetchPoolTokens, library])\r\n\r\n  async function onRemoveLiquidity() {\r\n    // take ETH amount, multiplied by ETH rate and 2 for total tx size\r\n    let ethTransactionSize = (ethWithdrawn / 1e18) * 2\r\n\r\n    const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW\r\n\r\n    const estimatedGasLimit = await exchange.estimate.removeLiquidity(\r\n      valueParsed,\r\n      ethWithdrawnMin,\r\n      tokenWithdrawnMin,\r\n      deadline\r\n    )\r\n\r\n    exchange\r\n      .removeLiquidity(valueParsed, ethWithdrawnMin, tokenWithdrawnMin, deadline, {\r\n        gasLimit: calculateGasMargin(estimatedGasLimit, GAS_MARGIN)\r\n      })\r\n      .then(response => {\r\n        ReactGA.event({\r\n          category: 'Transaction',\r\n          action: 'Remove Liquidity',\r\n          label: outputCurrency,\r\n          value: ethTransactionSize,\r\n          dimension1: response.hash\r\n        })\r\n        ReactGA.event({\r\n          category: 'Hash',\r\n          action: response.hash,\r\n          label: ethTransactionSize.toString(),\r\n          value: ethTransactionSize\r\n        })\r\n        addTransaction(response)\r\n      })\r\n  }\r\n\r\n  const b = text => <BlueSpan>{text}</BlueSpan>\r\n\r\n  function renderTransactionDetails() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          {t('youAreRemoving')} {b(`${amountFormatter(ethWithdrawn, 18, 4)} ETH`)} {t('and')}{' '}\r\n          {b(`${amountFormatter(tokenWithdrawn, decimals, Math.min(decimals, 4))} ${symbol}`)} {t('outPool')}\r\n        </div>\r\n        <LastSummaryText>\r\n          {t('youWillRemove')} {b(amountFormatter(valueParsed, 18, 4))} {t('liquidityTokens')}\r\n        </LastSummaryText>\r\n        <LastSummaryText>\r\n          {t('totalSupplyIs')} {b(amountFormatter(totalPoolTokens, 18, 4))}\r\n        </LastSummaryText>\r\n        <LastSummaryText>\r\n          {t('tokenWorth')} {b(amountFormatter(ETHPer.div(totalPoolTokens), 18, 4))} ETH {t('and')}{' '}\r\n          {b(amountFormatter(tokenPer.div(totalPoolTokens), decimals, Math.min(4, decimals)))} {symbol}\r\n        </LastSummaryText>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  function renderSummary() {\r\n    let contextualInfo = ''\r\n    let isError = false\r\n    if (brokenTokenWarning) {\r\n      contextualInfo = t('brokenToken')\r\n      isError = true\r\n    } else if (inputError) {\r\n      contextualInfo = inputError\r\n      isError = true\r\n    } else if (!outputCurrency || outputCurrency === 'ETH') {\r\n      contextualInfo = t('selectTokenCont')\r\n    } else if (!valueParsed) {\r\n      contextualInfo = t('enterValueCont')\r\n    } else if (!account) {\r\n      contextualInfo = t('noWallet')\r\n      isError = true\r\n    }\r\n\r\n    return (\r\n      <ContextualInfo\r\n        key=\"context-info\"\r\n        openDetailsText={t('transactionDetails')}\r\n        closeDetailsText={t('hideDetails')}\r\n        contextualInfo={contextualInfo}\r\n        isError={isError}\r\n        renderTransactionDetails={renderTransactionDetails}\r\n      />\r\n    )\r\n  }\r\n\r\n  function formatBalance(value) {\r\n    return `Balance: ${value}`\r\n  }\r\n\r\n  const isActive = active && account\r\n  const isValid = inputError === null\r\n\r\n  const marketRate = getMarketRate(exchangeETHBalance, exchangeTokenBalance, decimals)\r\n\r\n  const newOutputDetected =\r\n    outputCurrency !== 'ETH' && outputCurrency && !INITIAL_TOKENS_CONTEXT[chainId].hasOwnProperty(outputCurrency)\r\n\r\n  const [showCustomTokenWarning, setShowCustomTokenWarning] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (newOutputDetected) {\r\n      setShowCustomTokenWarning(true)\r\n    } else {\r\n      setShowCustomTokenWarning(false)\r\n    }\r\n  }, [newOutputDetected])\r\n\r\n  return (\r\n    <>\r\n      {showCustomTokenWarning && (\r\n        <WarningCard\r\n          onDismiss={() => {\r\n            setShowCustomTokenWarning(false)\r\n          }}\r\n          urlAddedTokens={urlAddedTokens}\r\n          currency={outputCurrency}\r\n        />\r\n      )}\r\n      <CurrencyInputPanel\r\n        title={t('poolTokens')}\r\n        extraText={poolTokenBalance && formatBalance(amountFormatter(poolTokenBalance, 18, 4))}\r\n        extraTextClickHander={() => {\r\n          if (poolTokenBalance) {\r\n            const valueToSet = poolTokenBalance\r\n            if (valueToSet.gt(ethers.constants.Zero)) {\r\n              setValue(amountFormatter(valueToSet, 18, 18, false))\r\n            }\r\n          }\r\n        }}\r\n        urlAddedTokens={urlAddedTokens}\r\n        onCurrencySelected={setOutputCurrency}\r\n        onValueChange={setValue}\r\n        value={value}\r\n        errorMessage={inputError}\r\n        selectedTokenAddress={outputCurrency}\r\n        hideETH={true}\r\n      />\r\n      <OversizedPanel>\r\n        <DownArrowBackground>\r\n          <DownArrow active={isActive} alt=\"arrow\" />\r\n        </DownArrowBackground>\r\n      </OversizedPanel>\r\n      <CurrencyInputPanel\r\n        title={t('output')}\r\n        description={!!(ethWithdrawn && tokenWithdrawn) ? `(${t('estimated')})` : ''}\r\n        key=\"remove-liquidity-input\"\r\n        renderInput={() =>\r\n          !!(ethWithdrawn && tokenWithdrawn) ? (\r\n            <RemoveLiquidityOutput>\r\n              <RemoveLiquidityOutputText>\r\n                {`${amountFormatter(ethWithdrawn, 18, 4, false)} ETH`}\r\n              </RemoveLiquidityOutputText>\r\n              <RemoveLiquidityOutputPlus> + </RemoveLiquidityOutputPlus>\r\n              <RemoveLiquidityOutputText>\r\n                {`${amountFormatter(tokenWithdrawn, decimals, Math.min(4, decimals))} ${symbol}`}\r\n              </RemoveLiquidityOutputText>\r\n            </RemoveLiquidityOutput>\r\n          ) : (\r\n            <RemoveLiquidityOutput />\r\n          )\r\n        }\r\n        disableTokenSelect\r\n        disableUnlock\r\n      />\r\n      <OversizedPanel key=\"remove-liquidity-input-under\" hideBottom>\r\n        <SummaryPanel>\r\n          <ExchangeRateWrapper>\r\n            <ExchangeRate>{t('exchangeRate')}</ExchangeRate>\r\n            {marketRate ? <span>{`1 ETH = ${amountFormatter(marketRate, 18, 4)} ${symbol}`}</span> : ' - '}\r\n          </ExchangeRateWrapper>\r\n          <ExchangeRateWrapper>\r\n            <ExchangeRate>{t('currentPoolSize')}</ExchangeRate>\r\n            {exchangeETHBalance && exchangeTokenBalance && (decimals || decimals === 0) ? (\r\n              <span>{`${amountFormatter(exchangeETHBalance, 18, 4)} ETH + ${amountFormatter(\r\n                exchangeTokenBalance,\r\n                decimals,\r\n                Math.min(decimals, 4)\r\n              )} ${symbol}`}</span>\r\n            ) : (\r\n              ' - '\r\n            )}\r\n          </ExchangeRateWrapper>\r\n          <ExchangeRateWrapper>\r\n            <ExchangeRate>\r\n              {t('yourPoolShare')} ({ownershipPercentageFormatted && ownershipPercentageFormatted}%)\r\n            </ExchangeRate>\r\n            {ETHOwnShare && TokenOwnShare ? (\r\n              <span>\r\n                {`${amountFormatter(ETHOwnShare, 18, 4)} ETH + ${amountFormatter(\r\n                  TokenOwnShare,\r\n                  decimals,\r\n                  Math.min(decimals, 4)\r\n                )} ${symbol}`}\r\n              </span>\r\n            ) : (\r\n              ' - '\r\n            )}\r\n          </ExchangeRateWrapper>\r\n        </SummaryPanel>\r\n      </OversizedPanel>\r\n      {renderSummary()}\r\n      <Flex>\r\n        <Button disabled={!isValid} onClick={onRemoveLiquidity}>\r\n          {t('removeLiquidity')}\r\n        </Button>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nconst SVGArrowDown = props => (\r\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 9 10\" fill=\"currentColor\" {...props}>\r\n    <path\r\n      d=\"M5.298 0H4.24v7.911h-.075L1.256 4.932l-.717.735L4.769 10 9 5.667l-.718-.735-2.908 2.979h-.076V0z\"\r\n      fill=\"currentColor\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport default SVGArrowDown\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\nimport ReactGA from 'react-ga'\r\nimport { ReactComponent as Dropup } from '../../assets/images/dropup-blue.svg'\r\nimport { ReactComponent as Dropdown } from '../../assets/images/dropdown-blue.svg'\r\n\r\nconst SummaryWrapper = styled.div`\r\n  color: ${({ error, theme }) => (error ? theme.salmonRed : theme.doveGray)};\r\n  font-size: 0.75rem;\r\n  text-align: center;\r\n  margin-top: 1rem;\r\n  padding-top: 1rem;\r\n`\r\n\r\nconst Details = styled.div`\r\n  background-color: ${({ theme }) => theme.concreteGray};\r\n  padding: 1.5rem;\r\n  border-radius: 1rem;\r\n  font-size: 0.75rem;\r\n  margin-top: 1rem;\r\n`\r\n\r\nconst SummaryWrapperContainer = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap};\r\n  color: ${({ theme }) => theme.royalBlue};\r\n  text-align: center;\r\n  margin-top: 1rem;\r\n  padding-top: 1rem;\r\n  cursor: pointer;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 0.75rem;\r\n\r\n  span {\r\n    margin-right: 12px;\r\n  }\r\n\r\n  img {\r\n    height: 0.75rem;\r\n    width: 0.75rem;\r\n  }\r\n`\r\n\r\nconst WrappedDropup = ({ isError, highSlippageWarning, ...rest }) => <Dropup {...rest} />\r\nconst ColoredDropup = styled(WrappedDropup)`\r\n  path {\r\n    stroke: ${({ theme }) => theme.royalBlue};\r\n  }\r\n`\r\n\r\nconst WrappedDropdown = ({ isError, highSlippageWarning, ...rest }) => <Dropdown {...rest} />\r\nconst ColoredDropdown = styled(WrappedDropdown)`\r\n  path {\r\n    stroke: ${({ theme }) => theme.royalBlue};\r\n  }\r\n`\r\n\r\nclass ContextualInfo extends Component {\r\n  static propTypes = {\r\n    openDetailsText: PropTypes.string,\r\n    renderTransactionDetails: PropTypes.func,\r\n    contextualInfo: PropTypes.string,\r\n    isError: PropTypes.bool\r\n  }\r\n\r\n  static defaultProps = {\r\n    openDetailsText: 'Advanced Details',\r\n    closeDetailsText: 'Hide Advanced',\r\n    renderTransactionDetails() {},\r\n    contextualInfo: '',\r\n    isError: false\r\n  }\r\n\r\n  state = {\r\n    showDetails: false\r\n  }\r\n\r\n  renderDetails() {\r\n    if (!this.state.showDetails) {\r\n      return null\r\n    }\r\n\r\n    return <Details>{this.props.renderTransactionDetails()}</Details>\r\n  }\r\n\r\n  render() {\r\n    const { openDetailsText, closeDetailsText, contextualInfo, isError } = this.props\r\n\r\n    if (contextualInfo) {\r\n      return <SummaryWrapper error={isError}>{contextualInfo}</SummaryWrapper>\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <SummaryWrapperContainer\r\n          onClick={() => {\r\n            !this.state.showDetails &&\r\n              ReactGA.event({\r\n                category: 'Advanced Interaction',\r\n                action: 'Open Advanced Details',\r\n                label: 'Pool Page Details'\r\n              })\r\n            this.setState(prevState => {\r\n              return { showDetails: !prevState.showDetails }\r\n            })\r\n          }}\r\n        >\r\n          {!this.state.showDetails ? (\r\n            <>\r\n              <span>{openDetailsText}</span>\r\n              <ColoredDropup />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <span>{closeDetailsText}</span>\r\n              <ColoredDropdown />\r\n            </>\r\n          )}\r\n        </SummaryWrapperContainer>\r\n        {this.renderDetails()}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContextualInfo\r\n"],"sourceRoot":""}