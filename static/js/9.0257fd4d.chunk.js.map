{"version":3,"sources":["components/NFTInputPanel/index.js","components/NFTExchangePage/index.jsx","pages/NFT/index.js","components/WarningCard/index.js","webpack:///./src/assets/images/ethereum-logo.svg?ca9a","components/TokenLogo/index.js","webpack:///./src/assets/images/dropup-blue.svg?fe79","webpack:///./src/assets/images/dropdown.svg?d0dc"],"names":["ethers","utils","bigNumberify","SubCurrencySelect","styled","button","theme","flexRowNoWrap","zumthorBlue","royalBlue","InputRow","div","Input","BorderlessInput","error","salmonRed","inputBackground","StyledBorderlessInput","concreteGray","CurrencySelect","selected","textColor","mercuryGray","darken","Aligner","span","StyledDropDown","DropDown","InputPanel","flexColumnNoWrap","transparentize","shadowColor","Container","malibuBlue","LabelRow","doveGray","LabelContainer","ErrorSpan","TokenModal","ModalHeader","CloseColor","Close","CloseIcon","SearchContainer","TokenModalInfo","TokenList","TokenModalRow","doveGrey","tokenRowHover","mediaWidth","upToMedium","TokenRowLeft","TokenSymbolGroup","TokenFullName","chaliceGray","FadedSpan","TokenRowBalance","TokenRowUsd","TokenRowRight","StyledTokenName","SpinnerWrapper","Spinner","CurrencyInputPanel","onValueChange","allBalances","renderInput","onCurrencySelected","title","description","extraText","extraTextClickHander","errorMessage","disableUnlock","disableTokenSelect","selectedTokenAddress","showUnlock","value","urlAddedTokens","hideETH","t","useTranslation","useState","modalIsOpen","setModalIsOpen","pendingApproval","usePendingApproval","allTokens","useAllTokenDetails","data-tip","onClick","label","style","background","color","border","borderRadius","padding","marginTop","type","min","step","placeholder","onChange","e","target","onKeyPress","which","keyCode","preventDefault","stopPropagation","TokenLogo","address","symbol","CurrencySelectModal","isOpen","onDismiss","onTokenSelect","searchQuery","setSearchQuery","useWeb3React","account","chainId","exchangeAddress","library","useTokenDetails","ethPrice","useETHPriceInUSD","useAllBalances","_usdAmounts","Object","keys","map","k","ethRate","exchangeDetails","tokenBalance","BigNumber","times","pow","decimals","USDRate","balanceBigNumber","usdAmounts","reduce","accumulator","currentValue","i","assign","tokenList","useMemo","sort","a","b","aSymbol","toLowerCase","bSymbol","aUSD","bUSD","gt","lt","balance","usdBalance","formatEthBalance","formatTokenBalance","name","filteredTokenList","list","filter","tokenEntry","inputIsAddress","slice","tokenEntryKey","match","RegExp","escapeStringRegex","some","m","inputRef","useRef","clearInputAndDismiss","Modal","minHeight","maxHeight","initialFocusRef","isMobile","undefined","alt","src","SearchIcon","ref","event","input","checksummedInput","isAddress","constants","AddressZero","to","length","urlAdded","hasOwnProperty","customAdded","INITIAL_TOKENS_CONTEXT","key","_onTokenSelect","size","id","Circle","isNaN","isZero","formatToUsd","GAS_MARGIN","DownArrowBackground","DownArrow","clickable","active","rest","ExchangeRateWrapper","ExchangeRate","Flex","getInitialSwapState","state","independentValue","exactFieldURL","exactAmountURL","dependentValue","independentField","inputCurrency","inputCurrencyURL","outputCurrency","outputCurrencyURL","initialCurrency","swapStateReducer","action","payload","field","currency","newInputCurrency","newOutputCurrency","NFTExchangePage","params","nft","nftMarketAddress","useAllTransactions","addTransaction","useTransactionAdder","initialSlippage","slippage","Number","parseInt","brokenTokenWarning","setBrokenTokenWarning","deadlineFromNow","setDeadlineFromNow","rawSlippage","setRawSlippage","rawTokenSlippage","setRawTokenSlippage","allowedSlippageBig","tokenAllowedSlippageBig","useEffect","ReactGA","pageview","window","location","pathname","search","useReducer","exactField","exactAmount","swapState","dispatchSwapState","brokenTokens","swapType","getSwapType","inputSymbol","inputDecimals","outputSymbol","outputDecimals","contract","useNFTMarketPlaceContract","manaContract","useTokenContract","recipient","inputBalance","useAddressBalance","outputBalance","inputBalanceFormatted","isInteger","amountFormatter","Math","outputBalanceFormatted","independentDecimals","dependentDecimals","independentValueParsed","setIndependentValueParsed","outputValueParsed","outputValueFormatted","independentError","setIndependentError","parsedValue","parseUnits","lte","Zero","gte","MaxUint256","Error","minimum","maximum","calculateSlippageBounds","dependentValueMinumum","dependentValueMaximum","inputError","setInputError","setShowUnlock","createBrowserHistory","push","inverted","setInverted","estimatedText","formatBalance","category","toString","ethTransactionSize","inputEthPerToken","estimate","purchaseTokenETH","method","args","getCurrentRate","price","approve","estimatedGasLimit","gasLimit","calculateGasMargin","then","response","purchaseTokenMana","dimension1","hash","customSlippageError","setcustomSlippageError","toggleWalletModal","useWalletModalToggle","newInputDetected","newOutputDetected","showInputWarning","setShowInputWarning","showOutputWarning","setShowOutputWarning","WarningCard","valueToSet","sub","parseEther","inputValue","selectedTokens","OversizedPanel","outputValue","hideBottom","TransactionDetails","slippageWarning","highSlippageWarning","setDeadline","deadline","INPUT","inputValueParsed","percentSlippageFormatted","recipientAddress","sending","disabled","warning","loggedOut","NFT","Wrapper","Row","QuestionWrapper","HelpCircleStyled","img","fadeIn","keyframes","Popup","backgroundColor","upToSmall","Text","showPopup","setPopup","inputName","fromURL","fontSize","onMouseEnter","onMouseLeave","question","fontWeight","href","getEtherscanLink","fontStyle","_extends","arguments","source","prototype","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","fill","points","_ref","svgRef","props","width","height","viewBox","preserveAspectRatio","ForwardRef","forwardRef","BAD_IMAGES","Image","Emoji","StyledEthereumLogo","EthereumLogo","setError","path","role","aria-label","TOKEN_ICON_API","onError","d","stroke","SvgDropupBlue","SvgDropdown"],"mappings":"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","file":"static/js/9.0257fd4d.chunk.js","sourcesContent":["import React, { useState, useRef, useMemo } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { ethers } from 'ethers'\r\nimport { BigNumber } from '@uniswap/sdk'\r\nimport styled from 'styled-components'\r\nimport escapeStringRegex from 'escape-string-regexp'\r\nimport { darken } from 'polished'\r\nimport Tooltip from '@reach/tooltip'\r\nimport '@reach/tooltip/styles.css'\r\nimport { isMobile } from 'react-device-detect'\r\n\r\nimport { BorderlessInput } from '../../theme'\r\nimport { useWeb3React } from '../../hooks'\r\nimport { isAddress, formatToUsd, formatTokenBalance, formatEthBalance } from '../../utils'\r\nimport { ReactComponent as DropDown } from '../../assets/images/dropdown.svg'\r\nimport Modal from '../Modal'\r\nimport TokenLogo from '../TokenLogo'\r\nimport SearchIcon from '../../assets/images/magnifying-glass.svg'\r\nimport { usePendingApproval } from '../../contexts/Transactions'\r\nimport { useTokenDetails, useAllTokenDetails, INITIAL_TOKENS_CONTEXT } from '../../contexts/Tokens'\r\nimport { ReactComponent as Close } from '../../assets/images/x.svg'\r\nimport { transparentize } from 'polished'\r\nimport { Spinner } from '../../theme'\r\nimport Circle from '../../assets/images/circle-grey.svg'\r\nimport { useETHPriceInUSD, useAllBalances } from '../../contexts/Balances'\r\n\r\nconst GAS_MARGIN = ethers.utils.bigNumberify(1000)\r\n\r\nconst SubCurrencySelect = styled.button`\r\n  ${({ theme }) => theme.flexRowNoWrap}\r\n  padding: 4px 50px 4px 15px;\r\n  margin-right: -40px;\r\n  line-height: 0;\r\n  height: 2rem;\r\n  align-items: center;\r\n  border-radius: 2.5rem;\r\n  outline: none;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  background: ${({ theme }) => theme.zumthorBlue};\r\n  border: 1px solid ${({ theme }) => theme.royalBlue};\r\n  color: ${({ theme }) => theme.royalBlue};\r\n`\r\n\r\nconst InputRow = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap}\r\n  align-items: center;\r\n\r\n  padding: 0.25rem 0.85rem 0.75rem;\r\n`\r\n\r\nconst Input = styled(BorderlessInput)`\r\n  font-size: 1.5rem;\r\n  color: ${({ error, theme }) => error && theme.salmonRed};\r\n  background-color: ${({ theme }) => theme.inputBackground};\r\n  -moz-appearance: textfield;\r\n`\r\n\r\nconst StyledBorderlessInput = styled(BorderlessInput)`\r\n  min-height: 2.5rem;\r\n  flex-shrink: 0;\r\n  text-align: left;\r\n  padding-left: 1.6rem;\r\n  background-color: ${({ theme }) => theme.concreteGray};\r\n`\r\n\r\nconst CurrencySelect = styled.button`\r\n  align-items: center;\r\n  font-size: 1rem;\r\n  color: ${({ selected, theme }) => (selected ? theme.textColor : theme.royalBlue)};\r\n  height: 2rem;\r\n  border: 1px solid ${({ selected, theme }) => (selected ? theme.mercuryGray : theme.royalBlue)};\r\n  border-radius: 2.5rem;\r\n  background-color: ${({ selected, theme }) => (selected ? theme.concreteGray : theme.zumthorBlue)};\r\n  outline: none;\r\n  cursor: pointer;\r\n  user-select: none;\r\n\r\n  :hover {\r\n    border: 1px solid\r\n      ${({ selected, theme }) => (selected ? darken(0.1, theme.mercuryGray) : darken(0.1, theme.royalBlue))};\r\n  }\r\n\r\n  :focus {\r\n    border: 1px solid ${({ theme }) => darken(0.1, theme.royalBlue)};\r\n  }\r\n\r\n  :active {\r\n    background-color: ${({ theme }) => theme.zumthorBlue};\r\n  }\r\n`\r\n\r\nconst Aligner = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst StyledDropDown = styled(DropDown)`\r\n  margin: 0 0.5rem 0 0.5rem;\r\n  height: 35%;\r\n\r\n  path {\r\n    stroke: ${({ selected, theme }) => (selected ? theme.textColor : theme.royalBlue)};\r\n  }\r\n`\r\n\r\nconst InputPanel = styled.div`\r\n  ${({ theme }) => theme.flexColumnNoWrap}\r\n  box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.95, theme.shadowColor)};\r\n  position: relative;\r\n  border-radius: 1.25rem;\r\n  background-color: ${({ theme }) => theme.inputBackground};\r\n  z-index: 1;\r\n`\r\n\r\nconst Container = styled.div`\r\n  border-radius: 1.25rem;\r\n  border: 1px solid ${({ error, theme }) => (error ? theme.salmonRed : theme.mercuryGray)};\r\n\r\n  background-color: ${({ theme }) => theme.inputBackground};\r\n  :focus-within {\r\n    border: 1px solid ${({ theme }) => theme.malibuBlue};\r\n  }\r\n`\r\n\r\nconst LabelRow = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap}\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.doveGray};\r\n  font-size: 0.75rem;\r\n  line-height: 1rem;\r\n  padding: 0.75rem 1rem;\r\n  span:hover {\r\n    cursor: pointer;\r\n    color: ${({ theme }) => darken(0.2, theme.doveGray)};\r\n  }\r\n`\r\n\r\nconst LabelContainer = styled.div`\r\n  flex: 1 1 auto;\r\n  width: 0;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\nconst ErrorSpan = styled.span`\r\n  color: ${({ error, theme }) => error && theme.salmonRed};\r\n  :hover {\r\n    cursor: pointer;\r\n    color: ${({ error, theme }) => error && darken(0.1, theme.salmonRed)};\r\n  }\r\n`\r\n\r\nconst TokenModal = styled.div`\r\n  ${({ theme }) => theme.flexColumnNoWrap}\r\n  width: 100%;\r\n`\r\n\r\nconst ModalHeader = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 0px 0px 0px 1rem;\r\n  height: 60px;\r\n`\r\n\r\nconst CloseColor = styled(Close)`\r\n  path {\r\n    stroke: ${({ theme }) => theme.textColor};\r\n  }\r\n`\r\n\r\nconst CloseIcon = styled.div`\r\n  position: absolute;\r\n  right: 1rem;\r\n  top: 14px;\r\n  &:hover {\r\n    cursor: pointer;\r\n    opacity: 0.6;\r\n  }\r\n`\r\n\r\nconst SearchContainer = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap}\r\n  justify-content: flex-start;\r\n  padding: 0.5rem 1.5rem;\r\n  background-color: ${({ theme }) => theme.concreteGray};\r\n`\r\n\r\nconst TokenModalInfo = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap}\r\n  align-items: center;\r\n  padding: 1rem 1.5rem;\r\n  margin: 0.25rem 0.5rem;\r\n  justify-content: center;\r\n  user-select: none;\r\n`\r\n\r\nconst TokenList = styled.div`\r\n  flex-grow: 1;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  -webkit-overflow-scrolling: touch;\r\n`\r\n\r\nconst TokenModalRow = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap}\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 1rem;\r\n  cursor: pointer;\r\n  user-select: none;\r\n\r\n  #symbol {\r\n    color: ${({ theme }) => theme.doveGrey};\r\n  }\r\n\r\n  :hover {\r\n    background-color: ${({ theme }) => theme.tokenRowHover};\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n    padding: 0.8rem 1rem;\r\n    padding-right: 2rem;\r\n  `}\r\n`\r\n\r\nconst TokenRowLeft = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap}\r\n  align-items : center;\r\n`\r\n\r\nconst TokenSymbolGroup = styled.div`\r\n  ${({ theme }) => theme.flexColumnNoWrap};\r\n  margin-left: 1rem;\r\n`\r\n\r\nconst TokenFullName = styled.div`\r\n  color: ${({ theme }) => theme.chaliceGray};\r\n`\r\n\r\nconst FadedSpan = styled.span`\r\n  color: ${({ theme }) => theme.royalBlue};\r\n`\r\n\r\nconst TokenRowBalance = styled.div`\r\n  font-size: 1rem;\r\n  line-height: 20px;\r\n`\r\n\r\nconst TokenRowUsd = styled.div`\r\n  font-size: 1rem;\r\n  line-height: 1.5rem;\r\n  color: ${({ theme }) => theme.chaliceGray};\r\n`\r\n\r\nconst TokenRowRight = styled.div`\r\n  ${({ theme }) => theme.flexColumnNoWrap};\r\n  align-items: flex-end;\r\n`\r\n\r\nconst StyledTokenName = styled.span`\r\n  margin: 0 0.25rem 0 0.25rem;\r\n`\r\n\r\nconst SpinnerWrapper = styled(Spinner)`\r\n  margin: 0 0.25rem 0 0.25rem;\r\n  color: ${({ theme }) => theme.chaliceGray};\r\n  opacity: 0.6;\r\n`\r\n\r\nexport default function CurrencyInputPanel({\r\n  onValueChange = () => {},\r\n  allBalances,\r\n  renderInput,\r\n  onCurrencySelected = () => {},\r\n  title,\r\n  description,\r\n  extraText,\r\n  extraTextClickHander = () => {},\r\n  errorMessage,\r\n  disableUnlock,\r\n  disableTokenSelect,\r\n  selectedTokenAddress = '',\r\n  showUnlock,\r\n  value,\r\n  urlAddedTokens,\r\n  hideETH = false\r\n}) {\r\n  const { t } = useTranslation()\r\n\r\n  const [modalIsOpen, setModalIsOpen] = useState(false)\r\n\r\n  const pendingApproval = usePendingApproval(selectedTokenAddress)\r\n\r\n  const allTokens = useAllTokenDetails()\r\n\r\n  function renderUnlockButton() {\r\n    if (disableUnlock || !showUnlock || selectedTokenAddress === 'MANA' || selectedTokenAddress === 'LAND' || !selectedTokenAddress) {\r\n      return null\r\n    } else {\r\n      if (!pendingApproval) {\r\n        return (\r\n          <SubCurrencySelect>\r\n            {t('unlock')}\r\n          </SubCurrencySelect>\r\n        )\r\n      } else {\r\n        return <SubCurrencySelect>{t('pending')}</SubCurrencySelect>\r\n      }\r\n    }\r\n  }\r\n\r\n  function _renderInput() {\r\n    if (typeof renderInput === 'function') {\r\n      return renderInput()\r\n    }\r\n\r\n    return (\r\n      <InputRow>\r\n        <Input\r\n          type=\"number\"\r\n          min=\"0\"\r\n          step=\"0.000000000000000001\"\r\n          error={!!errorMessage}\r\n          placeholder=\"0.0\"\r\n          onChange={e => onValueChange(e.target.value)}\r\n          onKeyPress={e => {\r\n            const charCode = e.which ? e.which : e.keyCode\r\n\r\n            // Prevent 'minus' character\r\n            if (charCode === 45) {\r\n              e.preventDefault()\r\n              e.stopPropagation()\r\n            }\r\n          }}\r\n          value={value}\r\n        />\r\n        {renderUnlockButton()}\r\n        <CurrencySelect\r\n          selected={!!selectedTokenAddress}\r\n          onClick={() => {\r\n            if (!disableTokenSelect) {\r\n              setModalIsOpen(true)\r\n            }\r\n          }}\r\n        >\r\n          <Aligner>\r\n            {selectedTokenAddress ? <TokenLogo address={selectedTokenAddress} /> : null}\r\n            {\r\n              <StyledTokenName>\r\n                {(allTokens[selectedTokenAddress] && allTokens[selectedTokenAddress].symbol) || t('selectToken')}\r\n              </StyledTokenName>\r\n            }\r\n            {!disableTokenSelect && <StyledDropDown selected={!!selectedTokenAddress} />}\r\n          </Aligner>\r\n        </CurrencySelect>\r\n      </InputRow>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <InputPanel>\r\n      <Container error={!!errorMessage}>\r\n        <LabelRow>\r\n          <LabelContainer>\r\n            <span>{title}</span> <span>{description}</span>\r\n          </LabelContainer>\r\n\r\n          <ErrorSpan\r\n            data-tip={'Enter max'}\r\n            error={!!errorMessage}\r\n            onClick={() => {\r\n              extraTextClickHander()\r\n            }}\r\n          >\r\n            <Tooltip\r\n              label=\"Enter Max\"\r\n              style={{\r\n                background: 'hsla(0, 0%, 0%, 0.75)',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '24px',\r\n                padding: '0.5em 1em',\r\n                marginTop: '-64px'\r\n              }}\r\n            >\r\n              <span>{extraText}</span>\r\n            </Tooltip>\r\n          </ErrorSpan>\r\n        </LabelRow>\r\n        {_renderInput()}\r\n      </Container>\r\n      {!disableTokenSelect && (\r\n        <CurrencySelectModal\r\n          isOpen={modalIsOpen}\r\n          onDismiss={() => {\r\n            setModalIsOpen(false)\r\n          }}\r\n          urlAddedTokens={urlAddedTokens}\r\n          onTokenSelect={onCurrencySelected}\r\n          allBalances={allBalances}\r\n          hideETH={hideETH}\r\n        />\r\n      )}\r\n    </InputPanel>\r\n  )\r\n}\r\n\r\nfunction CurrencySelectModal({ isOpen, onDismiss, onTokenSelect, urlAddedTokens, hideETH }) {\r\n  const { t } = useTranslation()\r\n\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n\r\n  const allTokens = useAllTokenDetails()\r\n\r\n  const { account, chainId, library } = useWeb3React()\r\n\r\n  const { exchangeAddress } = useTokenDetails(searchQuery)\r\n\r\n\r\n  // BigNumber.js instance\r\n  const ethPrice = useETHPriceInUSD()\r\n\r\n  // all balances for both account and exchanges\r\n  const allBalances = useAllBalances()\r\n\r\n  const _usdAmounts = Object.keys(allTokens).map(k => {\r\n    if (ethPrice && allBalances[account] && allBalances[account][k] && allBalances[account][k].value) {\r\n      let ethRate = 1 // default for ETH\r\n      let exchangeDetails = allBalances[allTokens[k].exchangeAddress]\r\n\r\n      if (\r\n        exchangeDetails &&\r\n        exchangeDetails[k] &&\r\n        exchangeDetails[k].value &&\r\n        exchangeDetails['ETH'] &&\r\n        exchangeDetails['ETH'].value\r\n      ) {\r\n        const tokenBalance = new BigNumber(exchangeDetails[k].value)\r\n        const ethBalance = new BigNumber(exchangeDetails['ETH'].value)\r\n        ethRate = ethBalance\r\n          .times(new BigNumber(10).pow(allTokens[k].decimals))\r\n          .div(tokenBalance)\r\n          .div(new BigNumber(10).pow(18))\r\n      }\r\n\r\n      const USDRate = ethPrice.times(ethRate)\r\n\r\n      const balanceBigNumber = new BigNumber(allBalances[account][k].value)\r\n      var usdBalance;\r\n      //Not formatting the Balance for LAND Tokens\r\n      if (k === '0xd1981d74abae2ec51e045242d8bb86a9daaa76b5') {\r\n        usdBalance = allBalances[account][k].value\r\n      } else {\r\n        usdBalance = balanceBigNumber.times(USDRate).div(new BigNumber(10).pow(allTokens[k].decimals))\r\n      } \r\n      return usdBalance\r\n    } else {\r\n      return null\r\n    }\r\n  })\r\n  const usdAmounts =\r\n    _usdAmounts &&\r\n    Object.keys(allTokens).reduce(\r\n      (accumulator, currentValue, i) => Object.assign({ [currentValue]: _usdAmounts[i] }, accumulator),\r\n      {}\r\n    )\r\n\r\n  const tokenList = useMemo(() => {\r\n    return Object.keys(allTokens)\r\n      .sort((a, b) => {\r\n        if (allTokens[a].symbol && allTokens[b].symbol) {\r\n          const aSymbol = allTokens[a].symbol.toLowerCase()\r\n          const bSymbol = allTokens[b].symbol.toLowerCase()\r\n\r\n          // pin ETH to top\r\n          if (aSymbol === 'ETH'.toLowerCase() || bSymbol === 'ETH'.toLowerCase()) {\r\n            return aSymbol === bSymbol ? 0 : aSymbol === 'ETH'.toLowerCase() ? -1 : 1\r\n          }\r\n\r\n          // then tokens with balance\r\n          if (usdAmounts[a] && !usdAmounts[b]) {\r\n            return -1\r\n          } else if (usdAmounts[b] && !usdAmounts[a]) {\r\n            return 1\r\n          }\r\n\r\n          // sort by balance\r\n          if (usdAmounts[a] && usdAmounts[b]) {\r\n            const aUSD = usdAmounts[a]\r\n            const bUSD = usdAmounts[b]\r\n\r\n            return aUSD.gt(bUSD) ? -1 : aUSD.lt(bUSD) ? 1 : 0\r\n          }\r\n\r\n          // sort alphabetically\r\n          return aSymbol < bSymbol ? -1 : aSymbol > bSymbol ? 1 : 0\r\n        } else {\r\n          return 0\r\n        }\r\n      })\r\n      .map(k => {\r\n        let balance\r\n        let usdBalance\r\n        // only update if we have data\r\n        if (k === 'ETH' && allBalances[account] && allBalances[account][k] && allBalances[account][k].value) {\r\n          balance = formatEthBalance(ethers.utils.bigNumberify(allBalances[account][k].value))\r\n          usdBalance = usdAmounts[k]\r\n        } else if (allBalances[account] && allBalances[account][k] && allBalances[account][k].value) {\r\n          // Using Original value for LAND, since it's atomic\r\n          if (k === '0xd1981d74abae2ec51e045242d8bb86a9daaa76b5') {\r\n            balance = allBalances[account][k].value\r\n          } else {\r\n            balance = formatTokenBalance(ethers.utils.bigNumberify(allBalances[account][k].value), allTokens[k].decimals)\r\n          }\r\n          usdBalance = usdAmounts[k]\r\n        }\r\n        return {\r\n          name: allTokens[k].name,\r\n          symbol: allTokens[k].symbol,\r\n          address: k,\r\n          balance: balance,\r\n          usdBalance: usdBalance\r\n        }\r\n      })\r\n  }, [allBalances, allTokens, usdAmounts, account])\r\n\r\n  const filteredTokenList = useMemo(() => {\r\n    const list = tokenList.filter(tokenEntry => {\r\n      const inputIsAddress = searchQuery.slice(0, 2) === '0x'\r\n\r\n      // check the regex for each field\r\n      const regexMatches = Object.keys(tokenEntry).map(tokenEntryKey => {\r\n        // if address field only search if input starts with 0x\r\n        if (tokenEntryKey === 'address') {\r\n          return (\r\n            inputIsAddress &&\r\n            typeof tokenEntry[tokenEntryKey] === 'string' &&\r\n            !!tokenEntry[tokenEntryKey].match(new RegExp(escapeStringRegex(searchQuery), 'i'))\r\n          )\r\n        }\r\n        return (\r\n          typeof tokenEntry[tokenEntryKey] === 'string' &&\r\n          !!tokenEntry[tokenEntryKey].match(new RegExp(escapeStringRegex(searchQuery), 'i'))\r\n        )\r\n      })\r\n      return regexMatches.some(m => m)\r\n    })\r\n    // If the user has not inputted anything, preserve previous sort\r\n    if (searchQuery === '') return list\r\n    return list.sort((a, b) => {\r\n      return a.symbol.toLowerCase() === searchQuery.toLowerCase() ? -1 : 1\r\n    })\r\n  }, [tokenList, searchQuery])\r\n\r\n  function _onTokenSelect(address) {\r\n    setSearchQuery('')\r\n    onTokenSelect(address)\r\n    onDismiss()\r\n  }\r\n\r\n  function renderTokenList() {\r\n    if (isAddress(searchQuery) && exchangeAddress === undefined) {\r\n      return <TokenModalInfo>Searching for Exchange...</TokenModalInfo>\r\n    }\r\n    if (isAddress(searchQuery) && exchangeAddress === ethers.constants.AddressZero) {\r\n      return (\r\n        <>\r\n          <TokenModalInfo>{t('noExchange')}</TokenModalInfo>\r\n          <TokenModalInfo>\r\n            <Link to={`/create-exchange/${searchQuery}`}>{t('createExchange')}</Link>\r\n          </TokenModalInfo>\r\n        </>\r\n      )\r\n    }\r\n    if (!filteredTokenList.length) {\r\n      return <TokenModalInfo>{t('noExchange')}</TokenModalInfo>\r\n    }\r\n\r\n    return filteredTokenList.map(({ address, symbol, name, balance, usdBalance }) => {\r\n      const urlAdded = urlAddedTokens && urlAddedTokens.hasOwnProperty(address)\r\n      const customAdded =\r\n        address !== 'ETH' &&\r\n        INITIAL_TOKENS_CONTEXT[chainId] &&\r\n        !INITIAL_TOKENS_CONTEXT[chainId].hasOwnProperty(address) &&\r\n        !urlAdded\r\n\r\n      if (hideETH && address === 'ETH') {\r\n        return null\r\n      }\r\n\r\n      return (\r\n        <TokenModalRow key={address} onClick={() => _onTokenSelect(address)}>\r\n          <TokenRowLeft>\r\n            <TokenLogo address={address} size={'2rem'} />\r\n            <TokenSymbolGroup>\r\n              <div>\r\n                <span id=\"symbol\">{symbol}</span>\r\n                <FadedSpan>\r\n                  {urlAdded && '(Added by URL)'} {customAdded && '(Added by user)'}\r\n                </FadedSpan>\r\n              </div>\r\n              <TokenFullName> {name}</TokenFullName>\r\n            </TokenSymbolGroup>\r\n          </TokenRowLeft>\r\n          <TokenRowRight>\r\n            {balance ? (\r\n              <TokenRowBalance>{balance && (balance > 0 || balance === '<0.0001') ? balance : '-'}</TokenRowBalance>\r\n            ) : account ? (\r\n              <SpinnerWrapper src={Circle} alt=\"loader\" />\r\n            ) : (\r\n              '-'\r\n            )}\r\n            <TokenRowUsd>\r\n              {usdBalance && !usdBalance.isNaN()\r\n                ? usdBalance.isZero()\r\n                  ? ''\r\n                  : usdBalance.lt(0.01)\r\n                  ? '<$0.01'\r\n                  : '$' + formatToUsd(usdBalance)\r\n                : ''}\r\n            </TokenRowUsd>\r\n          </TokenRowRight>\r\n        </TokenModalRow>\r\n      )\r\n    })\r\n  }\r\n\r\n  // manage focus on modal show\r\n  const inputRef = useRef()\r\n\r\n  function onInput(event) {\r\n    const input = event.target.value\r\n    const checksummedInput = isAddress(input)\r\n    setSearchQuery(checksummedInput || input)\r\n  }\r\n\r\n  function clearInputAndDismiss() {\r\n    setSearchQuery('')\r\n    onDismiss()\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onDismiss={clearInputAndDismiss}\r\n      minHeight={60}\r\n      maxHeight={50}\r\n      initialFocusRef={isMobile ? undefined : inputRef}\r\n    >\r\n      <TokenModal>\r\n        <ModalHeader>\r\n          <p>{t('selectToken')}</p>\r\n          <CloseIcon onClick={clearInputAndDismiss}>\r\n            <CloseColor alt={'close icon'} />\r\n          </CloseIcon>\r\n        </ModalHeader>\r\n        <SearchContainer>\r\n          <img src={SearchIcon} alt=\"search\" />\r\n          <StyledBorderlessInput\r\n            ref={inputRef}\r\n            type=\"text\"\r\n            placeholder={isMobile ? t('searchOrPasteMobile') : t('searchOrPaste')}\r\n            onChange={onInput}\r\n          />\r\n        </SearchContainer>\r\n        <TokenList>{renderTokenList()}</TokenList>\r\n      </TokenModal>\r\n    </Modal>\r\n  )\r\n}\r\n","import React, { useState, useReducer, useEffect } from 'react'\r\nimport ReactGA from 'react-ga'\r\nimport { createBrowserHistory } from 'history'\r\nimport { ethers } from 'ethers'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport { useWeb3React, useNFTMarketPlaceContract, useTokenContract } from '../../hooks'\r\nimport { brokenTokens } from '../../constants'\r\nimport { amountFormatter, calculateGasMargin, isAddress, getCurrentRate } from '../../utils'\r\n\r\nimport { useTokenDetails, INITIAL_TOKENS_CONTEXT } from '../../contexts/Tokens'\r\nimport { useTransactionAdder } from '../../contexts/Transactions'\r\nimport { useAddressBalance } from '../../contexts/Balances'\r\nimport { useWalletModalToggle } from '../../contexts/Application'\r\n\r\nimport { Button } from '../../theme'\r\nimport CurrencyInputPanel from '../NFTInputPanel'\r\nimport OversizedPanel from '../OversizedPanel'\r\nimport { useAllTransactions } from '../../contexts/Transactions'\r\n\r\nimport TransactionDetails from '../TransactionDetails'\r\nimport ArrowDown from '../../assets/svg/SVGArrowDown'\r\nimport WarningCard from '../WarningCard'\r\nimport { async } from 'q'\r\n\r\nconst INPUT = 0\r\nconst OUTPUT = 1\r\n\r\nconst ETH_TO_TOKEN = 0\r\nconst TOKEN_TO_ETH = 1\r\nconst TOKEN_TO_TOKEN = 2\r\n\r\n// denominated in bips\r\nconst ALLOWED_SLIPPAGE_DEFAULT = 50\r\nconst TOKEN_ALLOWED_SLIPPAGE_DEFAULT = 50\r\n\r\n// 15 minutes, denominated in seconds\r\nconst DEFAULT_DEADLINE_FROM_NOW = 60 * 15\r\n\r\n// % above the calculated gas cost that we actually send, denominated in bips\r\nconst GAS_MARGIN = ethers.utils.bigNumberify(100000)\r\n\r\n\r\nconst DownArrowBackground = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap}\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst WrappedArrowDown = ({ clickable, active, ...rest }) => <ArrowDown {...rest} />\r\nconst DownArrow = styled(WrappedArrowDown)`\r\n  color: ${({ theme, active }) => (active ? theme.royalBlue : theme.chaliceGray)};\r\n  width: 0.625rem;\r\n  height: 0.625rem;\r\n  position: relative;\r\n  padding: 0.875rem;\r\n  cursor: ${({ clickable }) => clickable && 'pointer'};\r\n`\r\n\r\nconst ExchangeRateWrapper = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap};\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.doveGray};\r\n  font-size: 0.75rem;\r\n  padding: 0.5rem 1rem;\r\n`\r\n\r\nconst ExchangeRate = styled.span`\r\n  flex: 1 1 auto;\r\n  width: 0;\r\n  color: ${({ theme }) => theme.doveGray};\r\n`\r\n\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 2rem;\r\n\r\n  button {\r\n    max-width: 20rem;\r\n  }\r\n`\r\n\r\nfunction calculateSlippageBounds(value, token = false, tokenAllowedSlippage, allowedSlippage) {\r\n  if (value) {\r\n    const minimum = value\r\n    const maximum = value\r\n    return {\r\n      minimum: minimum < (ethers.constants.Zero) ? ethers.constants.Zero : minimum,\r\n      maximum: maximum < (ethers.constants.MaxUint256) ? ethers.constants.MaxUint256 : maximum\r\n    }\r\n  } else {\r\n    return {}\r\n  }\r\n}\r\n\r\nfunction getSwapType(inputCurrency, outputCurrency) {\r\n  if (!inputCurrency || !outputCurrency) {\r\n    return null\r\n  } else if (inputCurrency === 'ETH') {\r\n    return ETH_TO_TOKEN\r\n  } else if (outputCurrency === 'ETH') {\r\n    return TOKEN_TO_ETH\r\n  } else {\r\n    return TOKEN_TO_TOKEN\r\n  }\r\n}\r\n\r\nfunction getInitialSwapState(state) {\r\n  return {\r\n    independentValue: state.exactFieldURL && state.exactAmountURL ? state.exactAmountURL : '', // this is a user input\r\n    dependentValue: '', // this is a calculated number\r\n    independentField: state.exactFieldURL === 'output' ? OUTPUT : INPUT,\r\n    inputCurrency: state.inputCurrencyURL ? state.inputCurrencyURL : 'ETH',\r\n    outputCurrency: state.outputCurrencyURL\r\n      ? state.outputCurrencyURL === 'ETH'\r\n        ? state.inputCurrencyURL && state.inputCurrencyURL !== 'ETH'\r\n          ? 'ETH'\r\n          : ''\r\n        : state.outputCurrencyURL\r\n      : state.initialCurrency\r\n        ? state.initialCurrency\r\n        : ''\r\n  }\r\n}\r\n\r\nfunction swapStateReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'FLIP_INDEPENDENT': {\r\n      const { independentField, inputCurrency, outputCurrency } = state\r\n      return {\r\n        ...state,\r\n        dependentValue: '',\r\n        independentField: independentField === INPUT ? OUTPUT : INPUT,\r\n        inputCurrency: outputCurrency,\r\n        outputCurrency: inputCurrency\r\n      }\r\n    }\r\n    case 'SELECT_CURRENCY': {\r\n      const { inputCurrency, outputCurrency } = state\r\n      const { field, currency } = action.payload\r\n\r\n      const newInputCurrency = field === INPUT ? currency : inputCurrency\r\n      const newOutputCurrency = field === OUTPUT ? currency : outputCurrency\r\n\r\n      if (newInputCurrency === newOutputCurrency) {\r\n        return {\r\n          ...state,\r\n          inputCurrency: field === INPUT ? currency : '',\r\n          outputCurrency: field === OUTPUT ? currency : ''\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          inputCurrency: newInputCurrency,\r\n          outputCurrency: newOutputCurrency\r\n        }\r\n      }\r\n    }\r\n    case 'UPDATE_INDEPENDENT': {\r\n      const { field, value } = action.payload\r\n\r\n      const { dependentValue, independentValue } = state\r\n      return {\r\n        ...state,\r\n        independentValue: value,\r\n        dependentValue: value,\r\n        independentField: field\r\n      }\r\n    }\r\n    case 'UPDATE_DEPENDENT': {\r\n      return {\r\n        ...state,\r\n        dependentValue: action.payload\r\n      }\r\n    }\r\n    default: {\r\n      return getInitialSwapState()\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default function NFTExchangePage({ initialCurrency, params, nft = true }) {\r\n  const { t } = useTranslation()\r\n  const { account, chainId, library, error } = useWeb3React()\r\n\r\n  const allTransactions = useAllTransactions()\r\n\r\n  const nftMarketAddress = '0x1b5666b40f30231879f8a5dedfc78cdda7cacf77'\r\n\r\n  const urlAddedTokens = {}\r\n  if (params.inputCurrency) {\r\n    urlAddedTokens[params.inputCurrency] = true\r\n  }\r\n  if (params.outputCurrency) {\r\n    urlAddedTokens[params.outputCurrency] = true\r\n  }\r\n  if (isAddress(initialCurrency)) {\r\n    urlAddedTokens[initialCurrency] = true\r\n  }\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  // check if URL specifies valid slippage, if so use as default\r\n  const initialSlippage = (token = false) => {\r\n    let slippage = Number.parseInt(params.slippage)\r\n    if (!isNaN(slippage) && (slippage === 0 || slippage >= 1)) {\r\n      return slippage // round to match custom input availability\r\n    }\r\n    // check for token <-> token slippage option\r\n    return token ? TOKEN_ALLOWED_SLIPPAGE_DEFAULT : ALLOWED_SLIPPAGE_DEFAULT\r\n  }\r\n\r\n\r\n  var [brokenTokenWarning, setBrokenTokenWarning] = useState()\r\n\r\n  const [deadlineFromNow, setDeadlineFromNow] = useState(DEFAULT_DEADLINE_FROM_NOW)\r\n\r\n  const [rawSlippage, setRawSlippage] = useState(() => initialSlippage())\r\n  const [rawTokenSlippage, setRawTokenSlippage] = useState(() => initialSlippage(true))\r\n\r\n  const allowedSlippageBig = ethers.utils.bigNumberify(rawSlippage)\r\n  const tokenAllowedSlippageBig = ethers.utils.bigNumberify(rawTokenSlippage)\r\n\r\n  // analytics\r\n  useEffect(() => {\r\n    ReactGA.pageview(window.location.pathname + window.location.search)\r\n  }, [])\r\n\r\n  // core swap state\r\n  const [swapState, dispatchSwapState] = useReducer(\r\n    swapStateReducer,\r\n    {\r\n      initialCurrency: initialCurrency,\r\n      inputCurrencyURL: params.inputCurrency,\r\n      outputCurrencyURL: params.outputCurrency,\r\n      exactFieldURL: params.exactField,\r\n      exactAmountURL: params.exactAmount\r\n    },\r\n    getInitialSwapState\r\n  )\r\n\r\n  const { independentValue, dependentValue, independentField, inputCurrency, outputCurrency } = swapState\r\n  useEffect(() => {\r\n    setBrokenTokenWarning(false)\r\n    for (let i = 0; i < brokenTokens.length; i++) {\r\n      if (\r\n        brokenTokens[i].toLowerCase() === outputCurrency.toLowerCase() ||\r\n        brokenTokens[i].toLowerCase() === inputCurrency.toLowerCase()\r\n      ) {\r\n        setBrokenTokenWarning(true)\r\n      }\r\n    }\r\n  }, [outputCurrency, inputCurrency])\r\n\r\n  // get swap type from the currency types\r\n  const swapType = getSwapType(inputCurrency, outputCurrency)\r\n\r\n\r\n\r\n  // get decimals and exchange address for each of the currency types --> 1\r\n  const { symbol: inputSymbol, decimals: inputDecimals } = useTokenDetails(\r\n    inputCurrency\r\n  )\r\n  const { symbol: outputSymbol, decimals: outputDecimals } = useTokenDetails(\r\n    outputCurrency\r\n  )\r\n\r\n  // Selling LAND Not Supported\r\n  if (inputSymbol === 'LAND') {\r\n    brokenTokenWarning = true;\r\n  }\r\n\r\n  //Only ETH-LAND/MANA-LAND Allowed\r\n  if ((outputSymbol != 'LAND')) {\r\n    brokenTokenWarning = true\r\n  }\r\n  // Only ETH-LAND/MANA-LAND Supported\r\n  if (inputSymbol != 'ETH' && inputSymbol != 'MANA') {\r\n    brokenTokenWarning = true\r\n  }\r\n\r\n  // NFT Marketplace Address\r\n  const contract = useNFTMarketPlaceContract(nftMarketAddress)\r\n\r\n  // MANA Address for Approving the Market Place\r\n  const manaContract = useTokenContract(inputCurrency)\r\n\r\n  var title = 'Enter the Token Id You want to Buy';\r\n \r\n  var input = 'The Current NFT Price is 1 Wei(We have fixed that Amount)'\r\n\r\n  const initialRecipient = () => {\r\n    if (params.recipient) {\r\n      return params.recipient\r\n    }\r\n    return ''\r\n  }\r\n\r\n  const [recipient, setRecipient] = useState({\r\n    address: initialRecipient(),\r\n    name: ''\r\n  })\r\n\r\n\r\n  // get balances for each of the currency types\r\n  const inputBalance = useAddressBalance(account, inputCurrency)\r\n  const outputBalance = useAddressBalance(account, outputCurrency)\r\n  const inputBalanceFormatted = !!(inputBalance && Number.isInteger(inputDecimals))\r\n    ? amountFormatter(inputBalance, inputDecimals, Math.min(4, inputDecimals))\r\n    : ''\r\n  const outputBalanceFormatted = outputBalance\r\n\r\n  // compute useful transforms of the data above\r\n  const independentDecimals = independentField === INPUT ? inputDecimals : outputDecimals\r\n  const dependentDecimals = independentField === OUTPUT ? inputDecimals : outputDecimals\r\n\r\n  // declare/get parsed and formatted versions of input/output values\r\n  const [independentValueParsed, setIndependentValueParsed] = useState()\r\n  const dependentValueFormatted = dependentValue\r\n  const inputValueParsed = 1\r\n  const inputValueFormatted = 1\r\n  const outputValueParsed = independentField === OUTPUT ? independentValueParsed : dependentValue\r\n  var outputValueFormatted = independentField === OUTPUT ? independentValue : dependentValueFormatted\r\n  // validate + parse independent value\r\n  const [independentError, setIndependentError] = useState()\r\n  useEffect(() => {\r\n    if (independentValue && (independentDecimals || independentDecimals === 0)) {\r\n      try {\r\n        const parsedValue = ethers.utils.parseUnits(independentValue, independentDecimals)\r\n\r\n        if (parsedValue.lte(ethers.constants.Zero) || parsedValue.gte(ethers.constants.MaxUint256)) {\r\n          throw Error()\r\n        } else {\r\n          setIndependentValueParsed(parsedValue)\r\n          setIndependentError(null)\r\n        }\r\n      } catch {\r\n        setIndependentError(t('inputNotValid'))\r\n      }\r\n\r\n      return () => {\r\n        setIndependentValueParsed()\r\n        setIndependentError()\r\n      }\r\n    }\r\n  }, [independentValue, independentDecimals, t])\r\n\r\n  // calculate slippage from target rate\r\n  const { minimum: dependentValueMinumum, maximum: dependentValueMaximum } = calculateSlippageBounds(\r\n\r\n    dependentValue,\r\n    swapType === TOKEN_TO_TOKEN,\r\n    tokenAllowedSlippageBig,\r\n    allowedSlippageBig\r\n  )\r\n  // validate input allowance + balance\r\n  const [inputError, setInputError] = useState()\r\n  const [showUnlock, setShowUnlock] = useState(false)\r\n  useEffect(() => {\r\n    const inputValueCalculation = independentField === INPUT ? independentValueParsed : dependentValueMaximum\r\n    if (inputBalance && inputValueCalculation) {\r\n      return () => {\r\n        setInputError()\r\n        setShowUnlock(false)\r\n      }\r\n    }\r\n  }, [independentField, independentValueParsed, dependentValueMaximum, inputBalance, inputCurrency, t])\r\n\r\n\r\n  useEffect(() => {\r\n    const history = createBrowserHistory()\r\n    history.push(window.location.pathname + '')\r\n  }, [])\r\n  // 5 calculating exchange rate replace this with exchange rate contract call\r\n  const [inverted, setInverted] = useState(false)\r\n  const exchangeRate = 1\r\n  const exchangeRateInverted = 1\r\n\r\n  // Have to hardcode it for the nft swap since it's there is no exchange innvolved here unlike uniswap so we don't need market rate\r\n  const percentSlippageFormatted = 0\r\n  const slippageWarning = false\r\n  const highSlippageWarning = false\r\n\r\n\r\n\r\n  const isValid = true\r\n\r\n  const estimatedText = `(${t('estimated')})`\r\n  function formatBalance(value) {\r\n    return `Balance: ${value}`\r\n  }\r\n\r\n  //Replace with NFT Contract's functions\r\n  async function onSwap() {\r\n    //if user changed deadline, log new one in minutes\r\n    if (deadlineFromNow !== DEFAULT_DEADLINE_FROM_NOW) {\r\n      ReactGA.event({\r\n        category: 'Advanced Interaction',\r\n        action: 'Set Custom Deadline',\r\n        value: deadlineFromNow / 60\r\n      })\r\n    }\r\n\r\n\r\n    // if user has changed slippage, log\r\n    if (swapType === TOKEN_TO_TOKEN) {\r\n      if (parseInt(tokenAllowedSlippageBig.toString()) !== TOKEN_ALLOWED_SLIPPAGE_DEFAULT) {\r\n        ReactGA.event({\r\n          category: 'Advanced Interaction',\r\n          action: 'Set Custom Slippage',\r\n          value: parseInt(tokenAllowedSlippageBig.toString())\r\n        })\r\n      }\r\n    } else {\r\n      if (parseInt(allowedSlippageBig.toString()) !== ALLOWED_SLIPPAGE_DEFAULT) {\r\n        ReactGA.event({\r\n          category: 'Advanced Interaction',\r\n          action: 'Set Custom Slippage',\r\n          value: parseInt(allowedSlippageBig.toString())\r\n        })\r\n      }\r\n    }\r\n\r\n    let estimate, method, args, value\r\n\r\n    let inputEthPerToken = 1\r\n    let ethTransactionSize = inputEthPerToken * inputValueFormatted\r\n\r\n    // params for GA event\r\n    let action = ''\r\n    let label = ''\r\n    // set GA params\r\n    action = 'SwapNFT'\r\n    label = 'NFT Marketplace'\r\n    if (swapType === ETH_TO_TOKEN) {\r\n      estimate = contract.estimate.purchaseTokenETH\r\n      method = contract.purchaseTokenETH\r\n      args = [outputValueFormatted]\r\n      value = await getCurrentRate(nftMarketAddress, library)\r\n\r\n    } else if (swapType === TOKEN_TO_TOKEN) {\r\n      const price = await getCurrentRate(nftMarketAddress, library)\r\n      estimate = manaContract.estimate.approve\r\n      method = manaContract.approve\r\n      args = [nftMarketAddress, price]\r\n      value = ethers.constants.Zero\r\n      //calling approve function\r\n      const estimatedGasLimit = await estimate(...args, { value })\r\n      method(...args, {\r\n        value,\r\n        gasLimit: calculateGasMargin(estimatedGasLimit, GAS_MARGIN)\r\n      }).then(response => {\r\n        addTransaction(response)\r\n      })\r\n      \r\n      estimate = contract.estimate.purchaseTokenMana\r\n      method = contract.purchaseTokenMana\r\n      args = [outputValueFormatted, price]\r\n      value = ethers.constants.Zero\r\n    }\r\n\r\n    const estimatedGasLimit = await estimate(...args, { value })\r\n    method(...args, {\r\n      value,\r\n      gasLimit: calculateGasMargin(estimatedGasLimit, GAS_MARGIN)\r\n    }).then(response => {\r\n      addTransaction(response)\r\n      ReactGA.event({\r\n        category: 'Transaction',\r\n        action: action,\r\n        label: label,\r\n        value: ethTransactionSize,\r\n        dimension1: response.hash\r\n      })\r\n      ReactGA.event({\r\n        category: 'Hash',\r\n        action: response.hash,\r\n        label: ethTransactionSize.toString()\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n\r\n  const [customSlippageError, setcustomSlippageError] = useState('')\r\n\r\n  const toggleWalletModal = useWalletModalToggle()\r\n\r\n  const newInputDetected =\r\n    inputCurrency !== 'ETH' && inputCurrency && !INITIAL_TOKENS_CONTEXT[chainId].hasOwnProperty(inputCurrency)\r\n\r\n  const newOutputDetected =\r\n    outputCurrency !== 'ETH' && outputCurrency && !INITIAL_TOKENS_CONTEXT[chainId].hasOwnProperty(outputCurrency)\r\n\r\n  const [showInputWarning, setShowInputWarning] = useState(false)\r\n  const [showOutputWarning, setShowOutputWarning] = useState(false)\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (newInputDetected) {\r\n      setShowInputWarning(true)\r\n    } else {\r\n      setShowInputWarning(false)\r\n    }\r\n  }, [newInputDetected, setShowInputWarning])\r\n\r\n  useEffect(() => {\r\n    if (newOutputDetected) {\r\n      setShowOutputWarning(true)\r\n    } else {\r\n      setShowOutputWarning(false)\r\n    }\r\n  }, [newOutputDetected, setShowOutputWarning])\r\n\r\n  return (\r\n    <>\r\n      {showInputWarning && (\r\n        <WarningCard\r\n          onDismiss={() => {\r\n            setShowInputWarning(false)\r\n          }}\r\n          urlAddedTokens={urlAddedTokens}\r\n          currency={inputCurrency}\r\n        />\r\n      )}\r\n      {showOutputWarning && (\r\n        <WarningCard\r\n          onDismiss={() => {\r\n            setShowOutputWarning(false)\r\n          }}\r\n          urlAddedTokens={urlAddedTokens}\r\n          currency={outputCurrency}\r\n        />\r\n      )}\r\n      <CurrencyInputPanel\r\n        title={input}\r\n        urlAddedTokens={urlAddedTokens}\r\n        description={inputValueFormatted && independentField === OUTPUT ? estimatedText : ''}\r\n        extraText={inputBalanceFormatted && formatBalance(inputBalanceFormatted)}\r\n        extraTextClickHander={() => {\r\n          if (inputBalance && inputDecimals) {\r\n            const valueToSet = inputCurrency === 'ETH' ? inputBalance.sub(ethers.utils.parseEther('.1')) : inputBalance\r\n            if (valueToSet.gt(ethers.constants.Zero)) {\r\n              dispatchSwapState({\r\n                type: 'UPDATE_INDEPENDENT',\r\n                payload: {\r\n                  value: amountFormatter(valueToSet, inputDecimals, inputDecimals, false),\r\n                  field: INPUT\r\n                }\r\n              })\r\n            }\r\n          }\r\n        }}\r\n        onCurrencySelected={inputCurrency => {\r\n          dispatchSwapState({\r\n            type: 'SELECT_CURRENCY',\r\n            payload: { currency: inputCurrency, field: INPUT }\r\n          })\r\n        }}\r\n        onValueChange={inputValue => {\r\n          dispatchSwapState({\r\n            type: 'UPDATE_INDEPENDENT',\r\n            payload: { value: inputValue, field: INPUT }\r\n          })\r\n        }}\r\n        showUnlock={showUnlock}\r\n        selectedTokens={[inputCurrency, outputCurrency]}\r\n        selectedTokenAddress={inputCurrency}\r\n        value={inputValueFormatted}\r\n        errorMessage={inputError ? inputError : independentField === INPUT ? independentError : ''}\r\n      />\r\n      <OversizedPanel>\r\n        <DownArrowBackground>\r\n          <DownArrow\r\n            onClick={() => {\r\n              dispatchSwapState({ type: 'FLIP_INDEPENDENT' })\r\n            }}\r\n            clickable\r\n            alt=\"swap\"\r\n            active={isValid}\r\n          />\r\n        </DownArrowBackground>\r\n      </OversizedPanel>\r\n      <CurrencyInputPanel\r\n        title={title}\r\n        description={outputValueFormatted && independentField === INPUT ? estimatedText : ''}\r\n        extraText={outputBalanceFormatted && formatBalance(outputBalanceFormatted)}\r\n        urlAddedTokens={urlAddedTokens}\r\n        onCurrencySelected={outputCurrency => {\r\n          dispatchSwapState({\r\n            type: 'SELECT_CURRENCY',\r\n            payload: { currency: outputCurrency, field: OUTPUT }\r\n          })\r\n        }}\r\n        onValueChange={outputValue => {\r\n          dispatchSwapState({\r\n            type: 'UPDATE_INDEPENDENT',\r\n            payload: { value: outputValue, field: OUTPUT }\r\n          })\r\n        }}\r\n        selectedTokens={[inputCurrency, outputCurrency]}\r\n        selectedTokenAddress={outputCurrency}\r\n        value={outputValueFormatted}\r\n        errorMessage={independentField === OUTPUT ? independentError : ''}\r\n        disableUnlock\r\n      />\r\n\r\n      <OversizedPanel hideBottom>\r\n        <ExchangeRateWrapper\r\n          onClick={() => {\r\n            setInverted(inverted => !inverted)\r\n          }}\r\n        >\r\n          <ExchangeRate>{t('exchangeRate')}</ExchangeRate>\r\n          {inverted ? (\r\n            <span>\r\n              {exchangeRate\r\n                ? `1 ${inputSymbol} = ${amountFormatter(exchangeRate, 18, 6, false)} ${outputSymbol}`\r\n                : ' 0 '}\r\n            </span>\r\n          ) : (\r\n              <span>\r\n                {exchangeRate\r\n                  ? `1 ${outputSymbol} = ${amountFormatter(exchangeRateInverted, 18, 6, false)} ${inputSymbol}`\r\n                  : ' 0 '}\r\n              </span>\r\n            )}\r\n        </ExchangeRateWrapper>\r\n      </OversizedPanel>\r\n      <TransactionDetails\r\n        account={account}\r\n        setRawSlippage={setRawSlippage}\r\n        setRawTokenSlippage={setRawTokenSlippage}\r\n        rawSlippage={rawSlippage}\r\n        slippageWarning={slippageWarning}\r\n        highSlippageWarning={highSlippageWarning}\r\n        brokenTokenWarning={brokenTokenWarning}\r\n        setDeadline={setDeadlineFromNow}\r\n        deadline={deadlineFromNow}\r\n        inputError={inputError}\r\n        independentError={independentError}\r\n        inputCurrency={inputCurrency}\r\n        outputCurrency={outputCurrency}\r\n        independentValue={independentValue}\r\n        independentValueParsed={independentValueParsed}\r\n        independentField={independentField}\r\n        INPUT={INPUT}\r\n        inputValueParsed={inputValueParsed}\r\n        outputValueParsed={outputValueParsed}\r\n        inputSymbol={inputSymbol}\r\n        outputSymbol={outputSymbol}\r\n        dependentValueMinumum={dependentValueMinumum}\r\n        dependentValueMaximum={dependentValueMaximum}\r\n        dependentDecimals={dependentDecimals}\r\n        independentDecimals={independentDecimals}\r\n        percentSlippageFormatted={percentSlippageFormatted}\r\n        setcustomSlippageError={setcustomSlippageError}\r\n        recipientAddress={recipient.address}\r\n        sending={false}\r\n      />\r\n      <Flex>\r\n        <Button\r\n          disabled={\r\n            brokenTokenWarning ? true : !account && !error ? false : !isValid || customSlippageError === 'invalid'\r\n          }\r\n          onClick={account && !error ? onSwap : toggleWalletModal}\r\n          warning={highSlippageWarning || customSlippageError === 'warning'}\r\n          loggedOut={!account}\r\n        >\r\n          {highSlippageWarning || customSlippageError === 'warning' ? t('swapAnyway') : t('swap')}\r\n        </Button>\r\n      </Flex>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport NFTExchangePage from '../../components/NFTExchangePage'\r\n\r\nexport default function NFT({ initialCurrency, params }) {\r\n  return <NFTExchangePage initialCurrency={initialCurrency} params={params} nft={true}  />\r\n}","import React, { useState } from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nimport { useWeb3React } from '../../hooks'\r\nimport { useTokenDetails } from '../../contexts/Tokens'\r\nimport { getEtherscanLink } from '../../utils'\r\n\r\nimport { Link } from '../../theme'\r\nimport TokenLogo from '../TokenLogo'\r\nimport { ReactComponent as Close } from '../../assets/images/x.svg'\r\nimport question from '../../assets/images/question.svg'\r\n\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 2rem;\r\n\r\n  button {\r\n    max-width: 20rem;\r\n  }\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  background: rgba(243, 190, 30, 0.1);\r\n  position: relative;\r\n  padding: 1rem;\r\n  border: 0.5px solid #f3be1e;\r\n  border-radius: 10px;\r\n  margin-bottom: 20px;\r\n  display: grid;\r\n  grid-template-rows: 1fr 1fr 1fr;\r\n  grid-row-gap: 10px;\r\n`\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-items: flex-start;\r\n  & > * {\r\n    margin-right: 6px;\r\n  }\r\n`\r\n\r\nconst CloseColor = styled(Close)`\r\n  color: #aeaeae;\r\n`\r\n\r\nconst CloseIcon = styled.div`\r\n  position: absolute;\r\n  right: 1rem;\r\n  top: 14px;\r\n  &:hover {\r\n    cursor: pointer;\r\n    opacity: 0.6;\r\n  }\r\n\r\n  & > * {\r\n    height: 14px;\r\n    width: 14px;\r\n  }\r\n`\r\n\r\nconst QuestionWrapper = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 0;\r\n  padding: 0;\r\n  margin-left: 0.4rem;\r\n  padding: 0.2rem;\r\n  border: none;\r\n  background: none;\r\n  outline: none;\r\n  cursor: default;\r\n  border-radius: 36px;\r\n\r\n  :hover,\r\n  :focus {\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nconst HelpCircleStyled = styled.img`\r\n  height: 18px;\r\n  width: 18px;\r\n`\r\n\r\nconst fadeIn = keyframes`\r\n  from {\r\n    opacity : 0;\r\n  }\r\n\r\n  to {\r\n    opacity : 1;\r\n  }\r\n`\r\n\r\nconst Popup = styled(Flex)`\r\n  position: absolute;\r\n  width: 228px;\r\n  right: 110px;\r\n  top: 4px;\r\n  z-index: 10;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 0.6rem 1rem;\r\n  line-height: 150%;\r\n  background: ${({ theme }) => theme.backgroundColor};\r\n  border: 1px solid ${({ theme }) => theme.mercuryGray};\r\n  border-radius: 8px;\r\n  animation: ${fadeIn} 0.15s linear;\r\n  color: ${({ theme }) => theme.textColor};\r\n  font-style: italic;\r\n\r\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\r\n    0px 24px 32px rgba(0, 0, 0, 0.04);\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    left: 2px;\r\n    top: 50px;\r\n  `}\r\n`\r\n\r\nconst Text = styled.div`\r\n  color: ${({ theme }) => theme.textColor};\r\n`\r\n\r\nfunction WarningCard({ onDismiss, urlAddedTokens, currency }) {\r\n  const [showPopup, setPopup] = useState()\r\n  const { chainId } = useWeb3React()\r\n  const { symbol: inputSymbol, name: inputName } = useTokenDetails(currency)\r\n  const fromURL = urlAddedTokens.hasOwnProperty(currency)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <CloseIcon onClick={() => onDismiss()}>\r\n        <CloseColor alt={'close icon'} />\r\n      </CloseIcon>\r\n      <Row style={{ fontSize: '12px' }}>\r\n        <Text>{fromURL ? 'Token imported by URL ' : 'Token imported by user'}</Text>\r\n        <QuestionWrapper\r\n          onClick={() => {\r\n            setPopup(!showPopup)\r\n          }}\r\n          onMouseEnter={() => {\r\n            setPopup(true)\r\n          }}\r\n          onMouseLeave={() => {\r\n            setPopup(false)\r\n          }}\r\n        >\r\n          <HelpCircleStyled src={question} alt=\"popup\" />\r\n        </QuestionWrapper>\r\n        {showPopup ? (\r\n          <Popup>\r\n            <Text>\r\n              The Uniswap smart contracts are designed to support any ERC20 token on Ethereum. Any token can be loaded\r\n              into the interface by entering its Ethereum address into the search field or passing it as a URL\r\n              parameter. Be careful when interacting with imported tokens as they have not been verified.\r\n            </Text>\r\n          </Popup>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </Row>\r\n      <Row>\r\n        <TokenLogo address={currency} />\r\n        <div style={{ fontWeight: 500 }}>{inputName && inputSymbol ? inputName + ' (' + inputSymbol + ')' : ''}</div>\r\n        <Link style={{ fontWeight: 400 }} href={getEtherscanLink(chainId, currency, 'address')}>\r\n          (View on Etherscan)\r\n        </Link>\r\n      </Row>\r\n      <Row style={{ fontSize: '12px', fontStyle: 'italic' }}>\r\n        <Text>Please verify the legitimacy of this token before making any transactions.</Text>\r\n      </Row>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default WarningCard\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"polygon\", {\n  fill: \"#343434\",\n  points: \"127.9611 0 125.1661 9.5 125.1661 285.168 127.9611 287.958 255.9231 212.32\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  fill: \"#8C8C8C\",\n  points: \"127.962 0 0 212.32 127.962 287.959 127.962 154.158\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  fill: \"#3C3C3B\",\n  points: \"127.9611 312.1866 126.3861 314.1066 126.3861 412.3056 127.9611 416.9066 255.9991 236.5866\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  fill: \"#8C8C8C\",\n  points: \"127.962 416.9052 127.962 312.1852 0 236.5852\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  fill: \"#141414\",\n  points: \"127.9611 287.9577 255.9211 212.3207 127.9611 154.1587\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  fill: \"#393939\",\n  points: \"0.0009 212.3208 127.9609 287.9578 127.9609 154.1588\"\n}));\n\nvar SvgEthereumLogo = function SvgEthereumLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"256px\",\n    height: \"417px\",\n    viewBox: \"0 0 256 417\",\n    preserveAspectRatio: \"xMidYMid\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgEthereumLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/ethereum-logo.fb666fbb.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { isAddress } from '../../utils'\r\n\r\nimport { ReactComponent as EthereumLogo } from '../../assets/images/ethereum-logo.svg'\r\n\r\nconst TOKEN_ICON_API = address =>\r\n  `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${isAddress(\r\n    address\r\n  )}/logo.png`\r\nconst BAD_IMAGES = {}\r\n\r\nconst Image = styled.img`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n  background-color: white;\r\n  border-radius: 1rem;\r\n`\r\n\r\nconst Emoji = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`\r\n\r\nconst StyledEthereumLogo = styled(EthereumLogo)`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`\r\n\r\nexport default function TokenLogo({ address, size = '1rem', ...rest }) {\r\n  const [error, setError] = useState(false)\r\n\r\n  let path = ''\r\n  if (address === 'ETH') {\r\n    return <StyledEthereumLogo size={size} />\r\n  } else if (!error && !BAD_IMAGES[address]) {\r\n    path = TOKEN_ICON_API(address.toLowerCase())\r\n  } else {\r\n    return (\r\n      <Emoji {...rest} size={size}>\r\n        <span role=\"img\" aria-label=\"Thinking\">\r\n          🤔\r\n        </span>\r\n      </Emoji>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Image\r\n      {...rest}\r\n      alt={address}\r\n      src={path}\r\n      size={size}\r\n      onError={() => {\r\n        BAD_IMAGES[address] = true\r\n        setError(true)\r\n      }}\r\n    />\r\n  )\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11.4673 6L6.23364 1L0.999995 6\",\n  stroke: \"#388DFF\"\n});\n\nvar SvgDropupBlue = function SvgDropupBlue(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 7,\n    viewBox: \"0 0 12 7\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgDropupBlue, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/dropup-blue.345dad74.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0.97168 1L6.20532 6L11.439 1\",\n  stroke: \"#AEAEAE\"\n});\n\nvar SvgDropdown = function SvgDropdown(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 7,\n    viewBox: \"0 0 12 7\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgDropdown, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/dropdown.50dbd07d.svg\";\nexport { ForwardRef as ReactComponent };"],"sourceRoot":""}