{"version":3,"sources":["pages/Pool/CreateExchange.js","components/AddressInputPanel/index.js"],"names":["SummaryPanel","styled","div","theme","flexColumnNoWrap","ExchangeRateWrapper","flexRowNoWrap","doveGray","ExchangeRate","span","CreateExchangeWrapper","SummaryText","error","salmonRed","Flex","withRouter","location","params","t","useTranslation","account","useWeb3React","useState","factory","useFactoryContract","address","tokenAddress","name","setTokenAddress","tokenAddressError","setTokenAddressError","useTokenDetails","symbol","decimals","exchangeAddress","addTransaction","useTransactionAdder","useEffect","createBrowserHistory","push","window","pathname","errorMessage","setErrorMessage","a","estimate","createExchange","estimatedGasLimit","gasLimit","then","response","ReactGA","event","category","action","undefined","ethers","constants","AddressZero","isValid","title","initialInput","state","onChange","onError","hideBottom","disabled","onClick","InputPanel","transparentize","shadowColor","inputBackground","ContainerRow","mercuryGray","InputContainer","LabelRow","LabelContainer","InputRow","Input","input","royalBlue","placeholderGray","AddressInputPanel","library","setInput","debouncedInput","useDebounce","data","setData","setError","stale","isAddress","lookupAddress","catch","resolveName","type","autoComplete","autoCorrect","autoCapitalize","spellCheck","placeholder","target","value","checksummedInput"],"mappings":"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","file":"static/js/15.3d622d8a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { withRouter } from 'react-router'\r\nimport { createBrowserHistory } from 'history'\r\nimport { ethers } from 'ethers'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'react-i18next'\r\nimport ReactGA from 'react-ga'\r\n\r\nimport { useWeb3React, useFactoryContract } from '../../hooks'\r\nimport { Button } from '../../theme'\r\nimport AddressInputPanel from '../../components/AddressInputPanel'\r\nimport OversizedPanel from '../../components/OversizedPanel'\r\nimport { useTokenDetails } from '../../contexts/Tokens'\r\nimport { useTransactionAdder } from '../../contexts/Transactions'\r\n\r\nconst SummaryPanel = styled.div`\r\n  ${({ theme }) => theme.flexColumnNoWrap};\r\n  padding: 1rem 0;\r\n`\r\n\r\nconst ExchangeRateWrapper = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap};\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.doveGray};\r\n  font-size: 0.75rem;\r\n  padding: 0.25rem 1rem 0;\r\n`\r\n\r\nconst ExchangeRate = styled.span`\r\n  flex: 1 1 auto;\r\n  width: 0;\r\n  color: ${({ theme }) => theme.doveGray};\r\n`\r\n\r\nconst CreateExchangeWrapper = styled.div`\r\n  color: ${({ theme }) => theme.doveGray};\r\n  text-align: center;\r\n  margin-top: 1rem;\r\n  padding-top: 1rem;\r\n`\r\n\r\nconst SummaryText = styled.div`\r\n  font-size: 0.75rem;\r\n  color: ${({ error, theme }) => error && theme.salmonRed};\r\n`\r\n\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 2rem;\r\n\r\n  button {\r\n    max-width: 20rem;\r\n  }\r\n`\r\n\r\nfunction CreateExchange({ location, params }) {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n\r\n  var [brokenTokenWarning] = useState()\r\n\r\n  const factory = useFactoryContract()\r\n\r\n  const [tokenAddress, setTokenAddress] = useState({\r\n    address: params.tokenAddress ? params.tokenAddress : '',\r\n    name: ''\r\n  })\r\n  const [tokenAddressError, setTokenAddressError] = useState()\r\n\r\n  const { name, symbol, decimals, exchangeAddress } = useTokenDetails(tokenAddress.address)\r\n  const addTransaction = useTransactionAdder()\r\n\r\n    // LAND & CDAI NOT SUPPORTED\r\n    if (symbol === 'CDAI' || symbol === 'LAND') {\r\n      brokenTokenWarning = true;\r\n    }\r\n\r\n  // clear url of query\r\n  useEffect(() => {\r\n    const history = createBrowserHistory()\r\n    history.push(window.location.pathname + '')\r\n  }, [])\r\n\r\n  // validate everything\r\n  const [errorMessage, setErrorMessage] = useState(!account && t('noWallet'))\r\n  useEffect(() => {\r\n    if (tokenAddressError) {\r\n      setErrorMessage(t('invalidTokenAddress'))\r\n    } else if (symbol === undefined || decimals === undefined || exchangeAddress === undefined) {\r\n      setErrorMessage()\r\n    } else if (symbol === null) {\r\n      setErrorMessage(t('invalidSymbol'))\r\n    } else if (decimals === null) {\r\n      setErrorMessage(t('invalidDecimals'))\r\n    } else if (exchangeAddress !== ethers.constants.AddressZero) {\r\n      setErrorMessage(t('exchangeExists'))\r\n    } else if (!account) {\r\n      setErrorMessage(t('noWallet'))\r\n    } else {\r\n      setErrorMessage(null)\r\n    }\r\n\r\n    return () => {\r\n      setErrorMessage()\r\n    }\r\n  }, [tokenAddress.address, symbol, decimals, exchangeAddress, account, t, tokenAddressError])\r\n\r\n  async function createExchange() {\r\n    const estimatedGasLimit = await factory.estimate.createExchange(tokenAddress.address)\r\n\r\n    factory.createExchange(tokenAddress.address, { gasLimit: estimatedGasLimit }).then(response => {\r\n      ReactGA.event({\r\n        category: 'Transaction',\r\n        action: 'Create Exchange'\r\n      })\r\n\r\n      addTransaction(response)\r\n    })\r\n  }\r\n\r\n  const isValid = errorMessage === null\r\n\r\n  return (\r\n    <>\r\n      <AddressInputPanel\r\n        title={t('tokenAddress')}\r\n        initialInput={\r\n          params.tokenAddress\r\n            ? { address: params.tokenAddress }\r\n            : { address: (location.state && location.state.tokenAddress) || '' }\r\n        }\r\n        onChange={setTokenAddress}\r\n        onError={setTokenAddressError}\r\n      />\r\n      <OversizedPanel hideBottom>\r\n        <SummaryPanel>\r\n          <ExchangeRateWrapper>\r\n            <ExchangeRate>{t('name')}</ExchangeRate>\r\n            <span>{name ? name : ' - '}</span>\r\n          </ExchangeRateWrapper>\r\n          <ExchangeRateWrapper>\r\n            <ExchangeRate>{t('symbol')}</ExchangeRate>\r\n            <span>{symbol ? symbol : ' - '}</span>\r\n          </ExchangeRateWrapper>\r\n          <ExchangeRateWrapper>\r\n            <ExchangeRate>{t('decimals')}</ExchangeRate>\r\n            <span>{decimals || decimals === 0 ? decimals : ' - '}</span>\r\n          </ExchangeRateWrapper>\r\n        </SummaryPanel>\r\n      </OversizedPanel>\r\n      <CreateExchangeWrapper>\r\n        <SummaryText>{errorMessage ? errorMessage : t('enterTokenCont')}</SummaryText>\r\n      </CreateExchangeWrapper>\r\n      <Flex>\r\n        <Button disabled={!isValid} onClick={createExchange}>\r\n          {t('createExchange')}\r\n        </Button>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withRouter(CreateExchange)\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { transparentize } from 'polished'\r\n\r\nimport { isAddress } from '../../utils'\r\nimport { useWeb3React, useDebounce } from '../../hooks'\r\n\r\nconst InputPanel = styled.div`\r\n  ${({ theme }) => theme.flexColumnNoWrap}\r\n  box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.95, theme.shadowColor)};\r\n  position: relative;\r\n  border-radius: 1.25rem;\r\n  background-color: ${({ theme }) => theme.inputBackground};\r\n  z-index: 1;\r\n`\r\n\r\nconst ContainerRow = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 1.25rem;\r\n  border: 1px solid ${({ error, theme }) => (error ? theme.salmonRed : theme.mercuryGray)};\r\n\r\n  background-color: ${({ theme }) => theme.inputBackground};\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nconst LabelRow = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap}\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.doveGray};\r\n  font-size: 0.75rem;\r\n  line-height: 1rem;\r\n  padding: 0.75rem 1rem;\r\n`\r\n\r\nconst LabelContainer = styled.div`\r\n  flex: 1 1 auto;\r\n  width: 0;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\nconst InputRow = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap}\r\n  align-items: center;\r\n  padding: 0.25rem 0.85rem 0.75rem;\r\n`\r\n\r\nconst Input = styled.input`\r\n  font-size: 1rem;\r\n  outline: none;\r\n  border: none;\r\n  flex: 1 1 auto;\r\n  width: 0;\r\n  background-color: ${({ theme }) => theme.inputBackground};\r\n\r\n  color: ${({ error, theme }) => (error ? theme.salmonRed : theme.royalBlue)};\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.placeholderGray};\r\n  }\r\n`\r\n\r\nexport default function AddressInputPanel({ title, initialInput = '', onChange = () => {}, onError = () => {} }) {\r\n  const { t } = useTranslation()\r\n\r\n  const { library } = useWeb3React()\r\n\r\n  const [input, setInput] = useState(initialInput.address ? initialInput.address : '')\r\n\r\n  const debouncedInput = useDebounce(input, 150)\r\n\r\n  const [data, setData] = useState({ address: undefined, name: undefined })\r\n  const [error, setError] = useState(false)\r\n\r\n  // keep data and errors in sync\r\n  useEffect(() => {\r\n    onChange({ address: data.address, name: data.name })\r\n  }, [onChange, data.address, data.name])\r\n  useEffect(() => {\r\n    onError(error)\r\n  }, [onError, error])\r\n\r\n  // run parser on debounced input\r\n  useEffect(() => {\r\n    let stale = false\r\n\r\n    if (isAddress(debouncedInput)) {\r\n      try {\r\n        library\r\n          .lookupAddress(debouncedInput)\r\n          .then(name => {\r\n            if (!stale) {\r\n              // if an ENS name exists, set it as the destination\r\n              if (name) {\r\n                setInput(name)\r\n              } else {\r\n                setData({ address: debouncedInput, name: '' })\r\n                setError(null)\r\n              }\r\n            }\r\n          })\r\n          .catch(() => {\r\n            if (!stale) {\r\n              setData({ address: debouncedInput, name: '' })\r\n              setError(null)\r\n            }\r\n          })\r\n      } catch {\r\n        setData({ address: debouncedInput, name: '' })\r\n        setError(null)\r\n      }\r\n    } else {\r\n      if (debouncedInput !== '') {\r\n        try {\r\n          library\r\n            .resolveName(debouncedInput)\r\n            .then(address => {\r\n              if (!stale) {\r\n                // if the debounced input name resolves to an address\r\n                if (address) {\r\n                  setData({ address: address, name: debouncedInput })\r\n                  setError(null)\r\n                } else {\r\n                  setError(true)\r\n                }\r\n              }\r\n            })\r\n            .catch(() => {\r\n              if (!stale) {\r\n                setError(true)\r\n              }\r\n            })\r\n        } catch {\r\n          setError(true)\r\n        }\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      stale = true\r\n    }\r\n  }, [debouncedInput, library, onChange, onError])\r\n\r\n  function onInput(event) {\r\n    if (data.address !== undefined || data.name !== undefined) {\r\n      setData({ address: undefined, name: undefined })\r\n    }\r\n    if (error !== undefined) {\r\n      setError()\r\n    }\r\n    const input = event.target.value\r\n    const checksummedInput = isAddress(input)\r\n    setInput(checksummedInput || input)\r\n  }\r\n\r\n  return (\r\n    <InputPanel>\r\n      <ContainerRow error={input !== '' && error}>\r\n        <InputContainer>\r\n          <LabelRow>\r\n            <LabelContainer>\r\n              <span>{title || t('recipientAddress')}</span>\r\n            </LabelContainer>\r\n          </LabelRow>\r\n          <InputRow>\r\n            <Input\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              autoCorrect=\"off\"\r\n              autoCapitalize=\"off\"\r\n              spellCheck=\"false\"\r\n              placeholder=\"0x1234...\"\r\n              error={input !== '' && error}\r\n              onChange={onInput}\r\n              value={input}\r\n            />\r\n          </InputRow>\r\n        </InputContainer>\r\n      </ContainerRow>\r\n    </InputPanel>\r\n  )\r\n}\r\n"],"sourceRoot":""}